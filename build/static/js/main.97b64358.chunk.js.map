{"version":3,"sources":["components/Navbar.module.css","components/Overview.js","context/AllprojectsContext.js","context/selectdProjectContext.js","components/Navbar.js","logo/logo.jpg","api/Client.js","components/Auth/Signin.js","context/UpdatesContext.js","context/CountContext.js","components/NotFound.js","components/Settings.js","Screens/addquestion.js","Screens/addCourse.js","Screens/addSubject.js","resources/drag.svg","Screens/createTest.js","Screens/addChapter.js","Screens/addTopic.js","Screens/Createpackage.js","Screens/addVideo.js","Screens/addUsers.js","Screens/blog.js","App.js","index.js","components/Auth/Signin.module.css","components/NotFound.module.css"],"names":["module","exports","Overview","props","CourseListContext","React","createContext","CourseList","setCourseList","SelectedProjectContext","SelectedProject","setSelectedProject","Navbar","useState","setuser","useContext","AllprojectsContext","AllProjects","useEffect","res","localStorage","getItem","JSON","parse","_setuser","Fragment","className","styles","sidebar","style","marginTop","nav__items","to","icon","faHome","navLink","faPlusMinus","faPlus","faQuestionCircle","faVideo","faSuperscript","faBox","faUserAlt","faSignOut","onClickCapture","removeItem","window","location","reload","pathname","ToastInfo","msg","toast","info","autoClose","isAdmin","token","expiry","atob","split","console","log","user","user_type","options","headers","ToastUpdate","toastId","update","render","type","TYPE","SUCCESS","ToastUpdateErr","ERROR","ToastErr","error","uploadToCloud","image","data","FormData","append","axios","post","uploadVideoToCloud","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","document","getElementById","innerText","SignIn","setType","Number","useHistory","useRef","password","_signin","current","undefined","email_Id","toastid","process","status","setItem","username","main","login","onChange","e","target","value","placeholder","autoComplete","onClick","preventDefault","updatesContext","updates","setUpdates","CountContext","count","setCount","NotFound","container","content","Settings","katex","paragraphmedia","Admin","params","addStyles","QuesreactQuill","createRef","option1reactQuill","option2reactQuill","option3reactQuill","option4reactQuill","option5reactQuill","solutionReactQuill","QuesParagraphQuill","enableMathQuillFormulaAuthoring","mathquill4quill","Quill","editor","isPara","setPara","optionType","setoptionType","courseList","setcourseList","QuestionText","setQuestionText","Subjectid","setSubjectid","correctOption","setcorrectOption","setcourseId","chapterId","setchapterId","topicId","settopicId","SubjectList","setSubjectList","ChapterList","setChapterList","DESC","setDESC","topicList","settopicList","QuestionTextPara","setQuestionTextPara","Level","setLevel","OptionsMedia1","OptionsMedia2","OptionsMedia3","OptionsMedia4","OptionsMedia5","Explanation","setExplanation","Options1","setOptions1","Options2","setOptions2","Options3","setOptions3","Options4","setOptions4","Options5","setOptions5","quesMedia","emailInputRef","setdata","focus","CorrectOptionComponent","ref","id","_id","Date","subjectId","Desc","questionDesc","questionType","questionLevel","explanation","creator","setLoader","_getQues","get","length","_getSubject","courseId","_getchapter","_gettopic","_AddMore","obj","now","question","questionmedia","option","optionMedia","paragraph","push","modules","formula","toolbar","header","script","color","background","align","clipboard","matchVisual","htmlFor","map","courseName","defaultValue","Id","subjectName","chapterName","topicName","name","backgroundColor","theme","marginBottom","src","i","dangerouslySetInnerHTML","__html","ans","index","viewBox","d","_SubmitQuestion","questionoption","AddCourse","CourseName","setCourseName","CourseDesc","setCourseDesc","CourseThumb","setCourseThumb","courseDesc","thumbnail","_getCourse","_uploadmedia","file","resp","secure_url","class","for","rows","xmlns","fill","stroke","files","accept","maxWidth","alt","whiteSpace","AddSubject","setsubjectName","subjectDesc","setsubjectDesc","courseiD","_getSubjectList","ressubject","err","selectedQuestionList","CreateTest","TestName","setTestName","totalTime","rule","setrule","TestNamePara","setTestNamePara","QuestionList","setQuestionList","sectionId","sectionName","SectionTime","positiveMarks","negativeMarks","disable","questionAttempt","CreateSection","setCreateSection","selectedSection","setselectedSection","examTypeList","setExamTypeList","examTypeFlag","setExamTypeFlag","examLevelFlag","setExamLevelFlag","addMoreSectionFlag","setAddMoreSectionFlag","datas","TestTitle","totaltime","exam_type","examLevel","Section","success","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","reqParam","finalRes","questionId","q","_getExamType","sec","isMultiSection","level","type_name","ind","CreateNewSection","filter","qes","_radioSection","disabled","parseInt","newSec","addMoreSection","display","courseCourseId","chapterChapterId","newQues","defaultChecked","_SubmitTest","AddChapter","setchapterName","tags","settags","chapterDesc","setchapterDesc","subjectList","setsubjectList","_getchapterlist","AddTopic","settopicName","TopicDesc","setTopicDesc","topicDesc","label","customStyles","top","left","right","bottom","marginRight","transform","Createpackage","PackageName","setPackageName","Options","FreeCourseVideo","setFreeCourseVideo","TetsList","setTetsList","VideoList","setVideoList","allStudentList","setAllStudentList","PackageDesc","setPackageDesc","Packagethumb","setPackagethumb","PackageofficialDesc","setPackageofficialDesc","PackagePrice","setPackagePrice","viewPackage","setViewPackage","allPackage","setAllPackage","modalIsOpen","setModalIsOpen","selectedPackage","setSelectedPackage","packageid","studentList","searchTerm","setSearchTerm","selectedStudentList","allSearchStudent","setAllSearchStudent","getEditMode","setEditMode","getEditModePacDetail","setEditModePacDetail","dragProps","onDragEnd","fromIndex","toIndex","item","splice","nodeSelector","handleSelector","testId","TestId","dataObj","officialDesc","TestList","packageId","setTimeout","_getTestList","da","testList","m","_getVideoByCourse","_getAllPackages","setModalIsOpenToFalse","_getAllStudent","userType","assignStudentToPackage","pac","packageDetails","price","questionCount","getPackageById","isOpen","ariaHideApp","event","seaStu","toLowerCase","indexOf","stu","mobileNumber","student","selStu","required","strokeLinecap","strokeLinejoin","strokeWidth","noOfFreeVideo","maxLength","max","min","flag","v","newData","concat","checked","isEditExist","secindex","videoname","videodescription","controls","videoPath","href","width","height","dragicon","_SubmitPackage","AddVideos","video","setVideo","VideoName","setVideoName","Videodesc","setVideodesc","state","mediaID","asset_id","MediaUrl","mediaType","format","MediaSize","bytes","moment","_SubmitVideo","AddUsers","firstName","lastName","role","logindetails","setlogindetails","prevState","_createUsers","AddBlog","blog","setblogs","submitBlog","alert","prev","formats","App","isLoader","updatesContextt","countContextt","Authorized","setAuthorized","Courses","SelectedProjects","useLocation","respcourse","Provider","path","Data","from","exact","component","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.97b64358.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topnav\":\"Navbar_topnav__3Af9b\",\"userName\":\"Navbar_userName__1RGWS\",\"projectName\":\"Navbar_projectName__3L9eO\",\"projecName\":\"Navbar_projecName__mvf-Q\",\"box\":\"Navbar_box__av6tq\",\"dropdownIcon\":\"Navbar_dropdownIcon__3ImME\",\"sidebar\":\"Navbar_sidebar__1W400\",\"menuIcon\":\"Navbar_menuIcon__35GKg\",\"navLink\":\"Navbar_navLink__1J5_h\",\"nav__items\":\"Navbar_nav__items__26pCG\",\"dropdownArrow\":\"Navbar_dropdownArrow__1ZeUm\",\"dropdown\":\"Navbar_dropdown__3S8CC\",\"dropdownMenu\":\"Navbar_dropdownMenu__3nW1b\",\"user\":\"Navbar_user__23Or9\",\"divider\":\"Navbar_divider__31tnA\"};","import React from 'react';\r\n\r\nfunction Overview(props) {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","import React from \"react\";\n\nconst CourseListContext = React.createContext({\n    CourseList: [],\n    setCourseList: () => { }\n});\n\nexport default CourseListContext;","import React from \"react\";\n\nconst SelectedProjectContext = React.createContext({\n    SelectedProject: [],\n    setSelectedProject: () => { }\n});\n\nexport default SelectedProjectContext;","import React, { useContext, useEffect, useState } from 'react';\r\nimport AllprojectsContext from '../context/AllprojectsContext';\r\nimport SelectedProjectContext from '../context/selectdProjectContext';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from \"./Navbar.module.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBox, faHome, faPlus, faPlusMinus, faQuestionCircle, faSignOut, faSuperscript, faUserAlt, faVideo } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nfunction Navbar(props) {\r\n\r\n    const [ user, setuser ] = useState({})\r\n    const { AllProjects } = useContext(AllprojectsContext)\r\n    const { SelectedProject, setSelectedProject } = useContext(SelectedProjectContext)\r\n    const [ navbar, setNavbar ] = useState(false)\r\n    const [ projectName, setProjectName ] = useState('')\r\n\r\n    function _setuser() {\r\n        let res = localStorage.getItem('user')\r\n        res = JSON.parse(res)\r\n        setuser(res)\r\n    }\r\n    function _Logout() {\r\n        localStorage.removeItem('pid')\r\n        localStorage.removeItem('tid')\r\n        localStorage.removeItem('user')\r\n        localStorage.removeItem('userid')\r\n        localStorage.removeItem('token')\r\n        window.location.reload();\r\n        window.location.pathname = '';\r\n    }\r\n    useEffect(() => {\r\n        _setuser()\r\n        setSelectedProject(localStorage.getItem('pid'))\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return <React.Fragment>\r\n        {/* <nav className={ styles.topnav }>\r\n            <div className={ styles.projectName }>\r\n                <div className={ styles.box }>\r\n                    <Dropdown arrowClassName={ styles.dropdownArrow } className={ styles.dropdownContainer } menuClassName={ styles.dropdownMenu } controlClassName={ styles.dropdown }\r\n                        options={ getProjects() } onChange={ (e) => {\r\n                            setSelectedProject(e.value);\r\n                            localStorage.setItem('pid', e.value)\r\n                        } } value={ getProjects().find(i => i.value == SelectedProject) } />\r\n                    <div className={ styles.dropdownIcon }><i className=\"fas fa-angle-down\"></i></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={ styles.user }>\r\n                <div className={ styles.userName }>\r\n                    <h3>{ user?.Name }</h3>\r\n                    <div style={ { backgroundColor: navigator.onLine == true ? '#2AC371' : '#D53539' } }></div>\r\n                </div>\r\n                <div className={ styles.divider }></div>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/settings'><img src={ settingsicon } /></Link>\r\n                    <Link style={ { textDecoration: 'underline' } } to='/settings'>Settings</Link>\r\n                </li>\r\n            </div>\r\n\r\n        </nav> */}\r\n\r\n        <nav className={ styles.sidebar }>\r\n\r\n            <ul style={ { marginTop: '10px' } }>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/overview'><FontAwesomeIcon icon={ faHome } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/overview' className={ styles.navLink }>Home</Link>\r\n                </li>\r\n\r\n\r\n                {/* <li className={ styles.nav__items }>\r\n                    <Link to='/Admin'><img src={ docsicon } /></Link> \r\n                    <Link to='/Admin' className={ styles.navLink }>Add Course</Link>\r\n                </li> */}\r\n\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/addCourse'><FontAwesomeIcon icon={ faPlusMinus } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/addCourse' className={ styles.navLink }>Add Course</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/addsubject'><FontAwesomeIcon icon={ faPlus } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/addsubject' className={ styles.navLink }>Add Subject</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/addChapter'><FontAwesomeIcon icon={ faPlus } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/addChapter' className={ styles.navLink }>Add Module</Link>\r\n                    {/* Module is Chapter */ }\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/addTopic'><FontAwesomeIcon icon={ faPlus } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/addTopic' className={ styles.navLink }>Add Topic</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/AddQuestion'><FontAwesomeIcon icon={ faQuestionCircle } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/AddQuestion' className={ styles.navLink }>Add Questions</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/AddVideo'>\r\n                        <FontAwesomeIcon icon={ faVideo } className='w-6 text-indigo-500 h-6 p-0' />\r\n                    </Link>\r\n                    {/* <Link to='/AddVideo'><i class=\"fa-solid fa-video-plus\"></i></Link> */ }\r\n                    <Link to='/AddVideo' className={ styles.navLink }>Add videos</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/CreateTest'>\r\n                        <FontAwesomeIcon icon={ faSuperscript } className='w-6 text-indigo-500 h-6 p-0' />\r\n                    </Link>\r\n                    <Link to='/CreateTest' className={ styles.navLink }>Create Test</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/CreatePackage'><FontAwesomeIcon icon={ faBox } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/CreatePackage' className={ styles.navLink }>Create Package</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/AddBlog'><FontAwesomeIcon icon={ faUserAlt } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/AddBlog' className={ styles.navLink }>Publish Blog</Link>\r\n                </li>\r\n                <li className={ styles.nav__items }>\r\n                    <Link to='/addNewUser'><FontAwesomeIcon icon={ faUserAlt } className='w-6 text-indigo-500 h-6 p-0' /></Link>\r\n                    <Link to='/addNewUser' className={ styles.navLink }>Add New User</Link>\r\n                </li>\r\n\r\n                {/* <li className={styles.nav__items}>\r\n    <Link to='/analysis'><img src={analysisicon}/></Link>\r\n    <Link to='/analysis' className={styles.navLink}>Analysis</Link>\r\n    </li> */}\r\n\r\n                {/* <li className={ styles.nav__items }>\r\n                    <Link to='/ratelist'><img src={ ratelistlogo } /></Link>\r\n                    <Link to='/ratelist' className={ styles.navLink }>Ratelist</Link>\r\n                </li> */}\r\n\r\n                {/* <li className={ styles.nav__items }>\r\n                    <Link to='/rfi'><img src={ rfilogo } /></Link>\r\n                    <Link to='/rfi' className={ styles.navLink }>RFI</Link>\r\n                </li> */}\r\n\r\n                {/* <li className={ styles.nav__items }>\r\n                    <Link to='/createTask'><img src={ plusicon } /></Link>\r\n                    <Link to='/createTask' className={ styles.navLink }>Create Task</Link>\r\n                </li> */}\r\n            </ul>\r\n            <ul style={ { marginTop: 'auto' } } >\r\n                <li className={ styles.nav__items }>\r\n                    <div><FontAwesomeIcon icon={ faSignOut } className='w-6 text-indigo-500 h-6 p-0' /></div>\r\n                    <div onClickCapture={ () => _Logout() } className={ styles.navLink }>Logout</div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/logo.5455d554.jpg\";","import React from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport moment from \"moment\";\n\n\n\nconst ToastInfo = (msg) => {\n    let toastId = toast.info(msg, { autoClose: false })\n    return toastId\n}\n\nexport const isTokenExpired = (token) => {\n    const expiry = (JSON.parse(atob(token.split('.')[ 1 ]))).exp;\n    return (Math.floor((new Date).getTime() / 1000)) >= expiry;\n}\n\nexport const isAdmin = (token) => {\n    const expiry = JSON.parse(atob(token.split('.')[ 1 ]));\n    console.log(\"🚀 ~ file: Client.js ~ line 20 ~ isAdmin ~ expiry\", expiry)\n    if (expiry.user.user_type == 'admin' || expiry.user.user_type == 'uploader') {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\nexport const options = {\n    headers: {\n        'Content-type': 'application/json',\n        \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n    }\n};\n\nconst ToastUpdate = (toastId, msg) => {\n    toast.update(toastId, {\n        render: msg,\n        type: toast.TYPE.SUCCESS,\n        autoClose: false\n    })\n}\n\nconst ToastUpdateErr = (toastId, msg) => {\n    toast.update(toastId, {\n        render: msg,\n        type: toast.TYPE.ERROR,\n        autoClose: 2000\n    })\n}\n\nconst ToastErr = (msg) => {\n    toast.error(msg, { autoClose: 2000 })\n}\n\n\nconst uploadToCloud = async (image) => {\n    const data = new FormData()\n    data.append(\"file\", image)\n    data.append(\"upload_preset\", \"du9l0dyb\")\n    data.append(\"api_key\", \"693111549956354\");\n    data.append(\"cloud_name\", \"tathagat1\");\n    console.log(\"🚀 ~ file: FolderDetails.js ~ line 40 ~ upload ~ data\", data)\n    return await axios.post(\"https://api.cloudinary.com/v1_1/du9l0dyb/image/upload\", data)\n}\n\n\nconst uploadVideoToCloud = async (image, toastId) => {\n\n    const config = {\n        onUploadProgress: function (progressEvent) {\n            var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            console.log(percentCompleted)\n            document.getElementById('uploading').innerText = percentCompleted\n            ToastUpdate(toastId, 'Uploading video : ' + percentCompleted)\n        }\n    }\n    const data = new FormData()\n    data.append(\"file\", image)\n    data.append(\"upload_preset\", \"du9l0dyb\")\n    data.append(\"api_key\", \"693111549956354\");\n    data.append(\"cloud_name\", \"tathagat1\");\n    console.log(\"🚀 ~ file: FolderDetails.js ~ line 40 ~ upload ~ data\", data)\n    return await axios.post(\"https://api.cloudinary.com/v1_1/du9l0dyb/raw/upload\", data, config)\n\n}\n\n\nexport { ToastUpdate, ToastErr, uploadVideoToCloud, ToastInfo, ToastUpdateErr, uploadToCloud }","import axios from 'axios';\nimport React, { useRef, useState } from 'react';\nimport App from '../../App';\nimport { useHistory } from 'react-router-dom';\nimport styles from \"./Signin.module.css\"\nimport logo from \"../../logo/logo.jpg\"\nimport { isAdmin, ToastErr, ToastInfo, ToastUpdateErr } from '../../api/Client';\nimport { ToastContainer } from 'react-toastify';\n\n\n\nconst SignIn = () => {\n    let [ type, setType ] = useState('text')\n    const history = useHistory();\n    const Number = useRef(null)\n    const password = useRef()\n\n    const _signin = async () => {\n        // e.preventDefault();\n        if (Number.current == '' || Number.current == null || Number.current == undefined\n            || password.current == '' || password.current == null || password.current == undefined) {\n            ToastErr('Please enter username and password')\n            return\n        }\n        const data = {\n            email_Id: Number.current,\n            password: password.current\n        }\n        // localStorage.setItem('token', 'res.data.token')\n        // localStorage.setItem('userid', 'res.data.user.username')\n        // window.location.reload();\n        const options = {\n            headers: {\n                'Content-type': 'application/json',\n                \"Access-Control-Allow-Origin\": \"*\",\n            }\n        };\n        let toastid = ToastInfo('Login..')\n        try {\n            const res = await axios.post(process.env.REACT_APP_API + '/login', data, options)\n            console.log(\"🚀 ~ file: Signin.js ~ line 41 ~ const_signin= ~ res\", res)\n            console.log(\"🚀 ~ file: Signin.js ~ line 33 ~ const_signin= ~ res\", res.status, res.data)\n            if (res.status == 200 && isAdmin(res.data.token)) {\n                localStorage.setItem('token', res.data.token)\n                localStorage.setItem('userid', res.data.user.username)\n                localStorage.setItem('usermail', res.data.user.email_Id)\n                window.location.reload();\n            }\n            else {\n                ToastUpdateErr(toastid, 'err')\n            }\n        }\n        catch (err) {\n            console.log(\"🚀 ~ file: Signin.js ~ line 53 ~ const_signin= ~ err\", err)\n            ToastUpdateErr(toastid, 'Incorrect username and password')\n        }\n\n    }\n\n    let showHandler = (e) => {\n        e.preventDefault();\n        if (type === 'password') {\n            setType('text')\n        } else {\n            setType('password')\n        }\n    }\n\n    return (\n        <div className={ styles.main }>\n            <ToastContainer />\n            <div className={ styles.login }>\n                <div >\n\n                    <h2>Welcome back!</h2>\n                    <h3 className='mt-2'>Please login to your account.</h3>\n                    <div className='flex mt-6 flex-col'>\n                        <label className='text-left text-gray-400'>Email Id</label>\n                        <input onChange={ (e) => Number.current = e.target.value }\n                            className='bg-indigo-100 rounded-lg p-4 text-gray-500 mt-1' type='text' placeholder='' />\n                    </div>\n                    <div className={ styles.password }>\n                        <div className='flex flex-col mt-4'>\n                            <label className='text-left text-gray-400'>Password</label>\n                            <input onChange={ (e) => password.current = e.target.value } type={ type } className='bg-indigo-100 rounded-lg p-4 text-gray-500 mt-1' autoComplete='off' />\n                        </div>\n                        <button type='button' onClick={ showHandler }><i className=\"far fa-eye\"></i></button>\n                    </div>\n                    {/* <div style={{display:'flex',justifyContent:'space-between',maxWidth: '400px'}}>\n                    <div className={styles.checkbox}>\n                    <input id='checkbox' type='checkbox'/>\n                    <label htmlFor='checkbox'>Remember Me</label>\n                    </div>\n                    <div>\n                        <a href='#'>Forgot Password</a>\n                    </div>\n                </div> */}\n                    <button onClick={ () => _signin() } className='bg-indigo-500 mb-4 w-full rounded-md' type=\"submit\" >Login</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn;","import React from \"react\";\n\nconst updatesContext = React.createContext({\n    updates: [],\n    setUpdates: () => { }\n});\n\nexport default updatesContext;","import React from \"react\";\n\nconst CountContext = React.createContext({\n    count: 0,\n    setCount: () => {}\n});\n\nexport default CountContext;","import styles from \"./NotFound.module.css\"\n\nfunction NotFound(){\n    return <div className={styles.container}>\n        <div className={styles.content}>\n        <h1>Error 404</h1>\n        <h2>Oops!</h2>\n        <h3>Sorry, the page you are looking for does not exist.</h3>\n        </div>\n    </div>\n}\n\nexport default NotFound;","import axios from \"axios\";\n\nfunction Settings() {\n\n\n    return (\n        <div>\n            settings\n        </div>\n    )\n}\n\nexport default Settings","//import liraries\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component, useContext, useEffect, useState, useRef } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { ToastInfo, ToastUpdate, uploadToCloud } from '../api/Client';\nimport CourseListContext from '../context/AllprojectsContext';\nimport { addStyles, EditableMathField, StaticMathField } from 'react-mathquill'\n\nimport ReactQuill, { Quill } from \"react-quill\";\nimport katex from \"katex\";\nimport \"katex/dist/katex.min.css\";\nimport mathquill4quill from 'mathquill4quill';\nimport \"mathquill4quill/mathquill4quill.css\";\nwindow.katex = katex;\n\n\n\n// create a component\nlet option1, option2, option3, option4 = null\nlet paragraphmedia\nconst Admin = (params) => {\n    addStyles()\n\n    let QuesreactQuill = React.createRef();\n    // let QuesDescreactQuill = React.createRef();\n    let option1reactQuill = React.createRef();\n    let option2reactQuill = React.createRef();\n    let option3reactQuill = React.createRef();\n    let option4reactQuill = React.createRef();\n    let option5reactQuill = React.createRef();\n    let solutionReactQuill = React.createRef();\n    let QuesParagraphQuill = React.createRef();\n\n    useEffect(() => {\n        const enableMathQuillFormulaAuthoring = mathquill4quill({ Quill, katex });\n        enableMathQuillFormulaAuthoring(QuesParagraphQuill.current.editor);\n        // enableMathQuillFormulaAuthoring(QuesDescreactQuill.current.editor);\n        enableMathQuillFormulaAuthoring(option1reactQuill.current.editor);\n        enableMathQuillFormulaAuthoring(option2reactQuill.current.editor);\n        enableMathQuillFormulaAuthoring(option3reactQuill.current.editor);\n        enableMathQuillFormulaAuthoring(option4reactQuill.current.editor);\n        enableMathQuillFormulaAuthoring(option5reactQuill.current.editor);\n        enableMathQuillFormulaAuthoring(solutionReactQuill.current.editor);\n        enableMathQuillFormulaAuthoring(QuesreactQuill.current.editor);\n    }, [])\n\n    const [ isPara, setPara ] = useState('paragraph')\n    const [ optionType, setoptionType ] = useState('mcq')\n    const { courseList, setcourseList } = useContext(CourseListContext)\n    const [ isvideo, setVideo ] = useState(false)\n    const [ QuestionText, setQuestionText ] = useState(null)\n    const [ Subjectid, setSubjectid ] = useState('')\n    const [ correctOption, setcorrectOption ] = useState('')\n    const [ courseId, setcourseId ] = useState('')\n    const [ chapterId, setchapterId ] = useState('')\n    const [ topicId, settopicId ] = useState('')\n    const [ SubjectList, setSubjectList ] = useState([])\n    const [ ChapterList, setChapterList ] = useState([])\n    const [ DESC, setDESC ] = useState([])\n    // const [ questionDesc, setquestionDesc ] = useState()\n    const [ topicList, settopicList ] = useState([])\n    const [ QuestionTextPara, setQuestionTextPara ] = useState()\n    const [ Level, setLevel ] = useState(null)\n    // console.log(\"🚀 ~ file: addquestion.js ~ line 22 ~ Admin ~ Level\", Level)\n    const [ Options, setOptions ] = useState([])\n    const [ OptionsMedia1, setOptionsMedia1 ] = useState()\n    const [ OptionsMedia2, setOptionsMedia2 ] = useState()\n    const [ OptionsMedia3, setOptionsMedia3 ] = useState()\n    const [ OptionsMedia4, setOptionsMedia4 ] = useState()\n    const [ OptionsMedia5, setOptionsMedia5 ] = useState()\n    const [ Explanation, setExplanation ] = useState()\n    const [ Options1, setOptions1 ] = useState()\n    const [ Options2, setOptions2 ] = useState()\n    const [ Options3, setOptions3 ] = useState()\n    const [ Options4, setOptions4 ] = useState()\n    const [ Options5, setOptions5 ] = useState()\n    const [ quesMedia, setquesMedia ] = useState(null);\n    const emailInputRef = useRef(null);\n    // console.log(\"🚀 ~ file: addquestion.js ~ line 28 ~ Admin ~ option1, option2, option3, option4\", option1, option2, option3, option4)\n    const [ data, setdata ] = useState([])\n\n    const [ latex, setLatex ] = useState('')\n    const [ value, setValue ] = useState('')\n\n    useEffect(()=>{\n        if(optionType == 'input'){\n            emailInputRef.current.focus();\n        }\n        \n      }, [correctOption]);\n\n\n\n\n    const CorrectOptionComponent = () => {\n\n        // const correctoptionReactQuill = React.createRef();\n        // useEffect(() => {\n        //     const enableMathQuillFormulaAuthoring = mathquill4quill({ Quill, katex });\n        //     enableMathQuillFormulaAuthoring(correctoptionReactQuill.current.editor);\n        // }, [])\n        return (\n            <div className='flex items-center'>\n                <input value={correctOption} ref={emailInputRef} onChange={ (e) => setcorrectOption(e.target.value) }\n                    className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    id=\"name\" type=\"text\" placeholder=\"Correct option\" />\n                {/* <ReactQuill\n                    style={ { backgroundColor: '#fff' } }\n                    className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                    ref={ correctoptionReactQuill }\n                    id=\"editor\"\n                    modules={ modules }\n                    placeholder=\"Correct option\"\n                    theme=\"snow\"\n                    onChange={ (e) => setcorrectOption(e) }\n                /> */}\n            </div>\n        )\n    }\n\n    const options = {\n        headers: {\n            'Content-type': 'application/json',\n            \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n        }\n    };\n\n    async function _SubmitQuestion() {\n\n\n\n        const data = {\n            _id: Date,\n            subjectId: Subjectid,\n            topicId: topicId,\n            chapterId: chapterId,\n            Desc: DESC,\n            questionDesc: QuestionTextPara,\n            questionType: isPara,\n            questionLevel: Level,\n            explanation: Explanation,\n            creator: localStorage.getItem('usermail')\n        }\n        let toastid = ToastInfo('Adding Questions ...');\n        params.setLoader(true);\n        const res = await axios.post(process.env.REACT_APP_API + '/questionupload', data, options)\n        // console.log(\"🚀 ~ file: addquestion.js ~ line 52 ~ _SubmitQuestion ~ res\", res.data)\n        _getQues()\n        if (res.status == 200) {\n            ToastUpdate(toastid, 'Questions addedd successfully');\n            window.location.reload(false);\n            setDESC([])\n        }\n        params.setLoader(false);\n    }\n\n    const _getQues = async () => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/question', options)\n        console.log(\"🚀 ~ file: Admin.js ~ line 3299 ~ useEffect ~ res.data\", res.data)\n        if (res.status == 200 && res.data.length > 0) {\n            setdata(res.data)\n        }\n        params.setLoader(false);\n    }\n\n    const _getSubject = async (courseId) => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/subject/' + courseId, options)\n        if (res.status == 200) {\n            setSubjectList(res.data)\n        }\n        params.setLoader(false);\n    }\n\n    const _getchapter = async (Subjectid) => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/chapter/' + Subjectid, options)\n        if (res.status == 200) {\n            setChapterList(res.data)\n        }\n        params.setLoader(false);\n    }\n\n    const _gettopic = async (chapterId) => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/topic/' + chapterId, options)\n        // console.log(\"🚀 ~ file: addquestion.js ~ line 79 ~ const_gettopic= ~ res\", res.data)\n        if (res.status == 200) {\n            settopicList(res.data)\n        }\n        params.setLoader(false);\n    }\n\n\n\n    useEffect(async () => {\n        _getQues();\n    }, [])\n\n    const _AddMore = () => {\n        let obj = {\n            _id: Date.now(),\n            question: QuestionText,\n            questionmedia: quesMedia,\n            option: [ {\n                _id: Date.now(),\n                option: Options1,\n                optionMedia: OptionsMedia1\n            },\n            {\n                _id: Date.now(),\n                option: Options2,\n                optionMedia: OptionsMedia2\n            }, {\n                _id: Date.now(),\n                option: Options3,\n                optionMedia: OptionsMedia3\n            },\n            {\n                _id: Date.now(),\n                option: Options4,\n                optionMedia: OptionsMedia4\n            } ],\n            correctOption: correctOption,\n            optionType: optionType,\n            explanation: Explanation,\n            paragraph: QuestionTextPara,\n            paragraphmedia: paragraphmedia,\n            questionType: isPara,\n\n        }\n        if(Options5) {\n            obj.option.push({\n                _id: Date.now(),\n                option: Options5,\n                optionMedia: OptionsMedia5\n            })\n        }\n        console.log(\"🚀 ~ file: addquestion.js ~ line 233 ~ Admin ~ obj\", obj)\n        setDESC([ ...DESC, obj ])\n        return obj\n    }\n\n    const _uploadmedia = async (file, state) => {\n\n        const resp = await uploadToCloud(file);\n        let data = resp.data\n        let media = {\n            mediaID: data.asset_id,\n            MediaUrl: data.secure_url,\n            mediaType: data?.format == undefined ? 'xlsx' : data?.format,\n            MediaSize: data.bytes,\n            Date: moment().format('DD-MM-YYYY')\n        }\n        if (state == 'ques') { setquesMedia(data.secure_url) }\n        // if (state == 'o1') { setOptionsMedia1(data.secure_url) }\n        // if (state == 'o2') { setOptionsMedia2(data.secure_url) }\n        // if (state == 'o3') { setOptionsMedia3(data.secure_url) }\n        // if (state == 'o4') { setOptionsMedia4(data.secure_url) }\n        // if (state == 'o5') { setOptionsMedia5(data.secure_url) }\n        if (state == 'para') { paragraphmedia = data.secure_url }\n        // console.log(\"🚀 ~ file: addquestion.js ~ line 164 ~ const_uploadmedia= ~ media\", media)\n\n    }\n\n\n\n    let modules = {\n        formula: true,\n        toolbar: [\n            [ { header: [ 1, 2, 3, false ] } ],\n            [ { 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' } ],\n            [ \"bold\", \"italic\", \"underline\" ], // toggled buttons\n            [ \"blockquote\", \"code-block\" ],\n            [ { script: \"sub\" }, { script: \"super\" } ], // superscript/subscript\n            [ { color: [] }, { background: [] } ], // dropdown with defaults from theme\n            [ { align: [] } ],\n            [ \"image\", \"formula\" ],\n            [ \"clean\" ] // remove formatting button\n        ],\n        clipboard: {\n            // toggle to add extra line breaks when pasting HTML:\n            matchVisual: false\n        }\n    };\n\n    const onSelectCourse =(e) => {\n        e.preventDefault();\n        setSubjectid(\"\");\n        setSubjectList([]);\n        setchapterId(\"\");\n        setChapterList([]);\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setcourseId(e.target.value);\n        _getSubject(e.target.value);\n    }\n\n    const onSelectSubject =(e) => {\n        e.preventDefault();\n        setchapterId(\"\");\n        setChapterList([]);\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setSubjectid(e.target.value);\n        _getchapter(e.target.value);\n    }\n\n    const onSelectChapter =(e) => {\n        e.preventDefault();\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setchapterId(e.target.value);\n        _gettopic(e.target.value);\n    }\n\n    return (\n\n        <div className='m-10'>\n            <ToastContainer />\n            <div className=\"mb-4\">\n                <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                    Select Course\n                </label>\n                <div className=\"relative\">\n                    <select onChange={ onSelectCourse } className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        { courseList[ 0 ] && courseList.map((res) => (\n                            <option value={ res.courseId }>{ res.courseName }</option>\n                        )) }\n                    </select>\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Subject\n                    </label>\n                    <select onChange={ onSelectSubject } defaultValue={\"\"}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        { SubjectList[ 0 ] && SubjectList.map((res) => (\n                            <option value={ res.Id }>{ res.subjectName }</option>\n                        )) }\n                    </select>\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Chapter\n                    </label>\n                    <select onChange={ onSelectChapter } defaultValue={\"\"}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        { ChapterList[ 0 ] && ChapterList.map((res) => (\n                            <option value={ res.chapterId }>{ res.chapterName }</option>\n                        )) }\n                    </select>\n\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Topic\n                    </label>\n                    <select onChange={ (e) => settopicId(e.target.value) } defaultValue={\"\"}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        { topicList[ 0 ] && topicList.map((res) => (\n                            <option value={ res.Id }>{ res.topicName }</option>\n                        )) }\n                    </select>\n                    <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    </div>\n                </div>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"inline-flex items-center\">\n                    <input onClick={ () => setPara('single') } type=\"radio\" className=\"form-radio\" name=\"Para\" value=\"1\" />\n                    <span className=\"ml-2\">Single</span>\n                </label>\n                <label className=\"inline-flex items-center ml-6\">\n                    <input onClick={ () => setPara('paragraph') } type=\"radio\" className=\"form-radio\" name=\"Para\" value=\"2\" />\n                    <span className=\"ml-2\">Paragraph</span>\n                </label>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"inline-flex items-center\">\n                    <input onClick={ () => setoptionType('input') } type=\"radio\" className=\"form-radio\" name=\"optionType\" value=\"1\" />\n                    <span className=\"ml-2\">Input </span>\n                </label>\n                <label className=\"inline-flex items-center ml-6\">\n                    <input onClick={ () => setoptionType('mcq') } type=\"radio\" className=\"form-radio\" name=\"optionType\" value=\"2\" />\n                    <span className=\"ml-2\">MCQ</span>\n                </label>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"inline-flex items-center\">\n                    <input onClick={ () => setLevel('Easy') } type=\"radio\" className=\"form-radio\" name=\"Level\" value=\"1\" />\n                    <span className=\"ml-2\">Easy</span>\n                </label>\n                <label className=\"inline-flex items-center ml-6\">\n                    <input onClick={ () => setLevel('Medium') } type=\"radio\" className=\"form-radio\" name=\"Level\" value=\"2\" />\n                    <span className=\"ml-2\">Medium</span>\n                </label>\n                <label className=\"inline-flex items-center ml-6\">\n                    <input onClick={ () => setLevel('Hard') } type=\"radio\" className=\"form-radio\" name=\"Level\" value=\"2\" />\n                    <span className=\"ml-2\">Hard</span>\n                </label>\n            </div>\n\n\n            {/* <div className=\"mb-4\">\n                <label className=\"inline-flex items-center\">\n                    <input onClick={ () => setVideo(true) } type=\"radio\" className=\"form-radio\" name=\"typeof\" value=\"1\" />\n                    <span className=\"ml-2\">Video</span>\n                </label>\n                <label className=\"inline-flex items-center ml-6\">\n                    <input onClick={ () => setVideo(false) } type=\"radio\" className=\"form-radio\" name=\"typeof\" value=\"2\" />\n                    <span className=\"ml-2\">Text</span>\n                </label>\n            </div> */}\n\n            {/* {\n                isvideo ?\n                    <div className=\"mb-4\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                            upload Video\n                        </label>\n                        <input type='file' />\n                    </div>\n                    : null\n            } */}\n\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Question\n                </label>\n                <ReactQuill\n                    style={ { backgroundColor: '#fff' } }\n                    className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                    ref={ QuesreactQuill }\n                    id=\"editor\"\n                    modules={ modules }\n                    placeholder=\"Type question here\"\n                    theme=\"snow\"\n                    onChange={ (e) => setQuestionText(e) }\n                />\n                {/* <input onChange={ (e) => setQuestionText(e.target.value) } className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"Text input\" /> */ }\n            </div>\n\n\n\n            {/* <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                Question Description\n\n\n            </label>\n            <ReactQuill\n                style={ { backgroundColor: '#fff' } }\n                className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                ref={ QuesDescreactQuill }\n                id=\"editor\"\n                modules={ {\n                    formula: true,\n                    toolbar: [ [ \"video\", \"bold\", \"italic\", \"underline\", \"formula\", \"image\" ] ]\n                } }\n                placeholder=\"Type question description here.\"\n                theme=\"snow\"\n                onChange={ (e) => setquestionDesc(e) }\n            />  */}\n\n            <div style={ { marginBottom: 18 } }></div>\n\n\n\n\n\n\n            { isPara == 'paragraph' ?\n                <div className=\"mb-4\">\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                        Paragraph\n                        {/* <textarea onChange={ (e) => {\n                                console.log('e.target.value', e.target.value)\n                                setQuestionTextPara(e.target.value)\n                            } } className=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" rows=\"5\" placeholder=\"Textarea\"></textarea>\n                            <input className='bg-gray-200 w-full rounded-sm p-2' accept=\"image/*\" type='file' onChange={ (e) => {\n                                _uploadmedia(e.target.files[ 0 ], 'para')\n                            } } /> */}\n                    </label>\n                    <ReactQuill\n                        style={ { backgroundColor: '#fff' } }\n                        className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                        ref={ QuesParagraphQuill }\n                        id=\"editor\"\n                        modules={ modules }\n                        placeholder=\"Type paragraph.\"\n                        theme=\"snow\"\n                        onChange={ (e) => setQuestionTextPara(e) }\n                    />\n                </div>\n                : null\n            }\n\n            { optionType == 'input' ?\n                <div >\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                        Correct Answer\n                    </label>\n                    <CorrectOptionComponent />\n                </div>\n                :\n                <div className=\"my-4\">\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                        Answers\n                    </label>\n                    <div className='grid flex-col grid-cols-1 gap-4'>\n                        <div className='flex flex-col'>\n                            <div className='flex items-center'>\n                                <input onClick={ () => setcorrectOption(1) } className='mr-2 w-4 h-4' name='options' type='radio' />\n                                {/* <input onChange={ (e) => setOptions1(e.target.value) } className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"option 1\" /> */ }\n                                {/* <input className='bg-gray-200 w-full rounded-sm p-2' type='file' accept=\"image/*\" onChange={ (e) => {\n                                    _uploadmedia(e.target.files[ 0 ], 'o1')\n                                } } /> */}\n                                <ReactQuill\n                                    style={ { backgroundColor: '#fff' } }\n                                    className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                                    ref={ option1reactQuill }\n                                    id=\"editor\"\n                                    modules={ modules }\n                                    placeholder=\"Option 1\"\n                                    theme=\"snow\"\n                                    onChange={ (e) => setOptions1(e) }\n                                />\n\n                            </div>\n                            <img className='w-20 hover:w-full duration-300 shadow-sm ' src={ OptionsMedia1 } />\n\n                        </div>\n                        <div className='flex flex-col'>\n                            <div className='flex items-center'>\n                                <input onClick={ () => setcorrectOption(2) } className='mr-2 w-4 h-4' name='options' type='radio' />\n                                {/* <input onChange={ (e) => setOptions2(e.target.value) } className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"option 2\" /> */ }\n                                {/* <input className='bg-gray-200 w-full rounded-sm p-2' type='file' accept=\"image/*\" onChange={ (e) => {\n                                    _uploadmedia(e.target.files[ 0 ], 'o2')\n                                } } /> */}\n                                <ReactQuill\n                                    style={ { backgroundColor: '#fff' } }\n                                    className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                                    ref={ option2reactQuill }\n                                    id=\"editor\"\n                                    modules={ modules }\n                                    placeholder=\"Option 2\"\n                                    theme=\"snow\"\n                                    onChange={ (e) => setOptions2(e) }\n                                />\n                            </div>\n                            <img className='w-20 hover:w-full duration-300 shadow-sm ' src={ OptionsMedia2 } />\n\n                        </div>\n                        <div className='flex flex-col'>\n                            <div className='flex items-center'>\n                                <input onClick={ () => setcorrectOption(3) } className='mr-2 w-4 h-4' name='options' type='radio' />\n                                {/* <input onChange={ (e) => setOptions3(e.target.value) } className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"option 3\" /> */ }\n                                {/* <input className='bg-gray-200 w-full rounded-sm p-2' type='file' accept=\"image/*\" onChange={ (e) => {\n                                    _uploadmedia(e.target.files[ 0 ], 'o3')\n                                } } /> */}\n                                <ReactQuill\n                                    style={ { backgroundColor: '#fff' } }\n                                    className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                                    ref={ option3reactQuill }\n                                    id=\"editor\"\n                                    modules={ modules }\n                                    placeholder=\"Option 3\"\n                                    theme=\"snow\"\n                                    onChange={ (e) => setOptions3(e) }\n                                />\n                            </div>\n                            <img className='w-20 hover:w-full duration-300 shadow-sm ' src={ OptionsMedia3 } />\n\n                        </div>\n                        <div className='flex flex-col'>\n                            <div className='flex items-center'>\n                                <input onClick={ () => setcorrectOption(4) } className='mr-2 w-4 h-4' name='options' type='radio' />\n                                {/* <input onChange={ (e) => setOptions4(e.target.value) } className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"option 4\" /> */ }\n                                {/* <input className='bg-gray-200 w-full rounded-sm p-2' type='file' accept=\"image/*\" onChange={ (e) => {\n                                    _uploadmedia(e.target.files[ 0 ], 'o4')\n                                } } /> */}\n                                <ReactQuill\n                                    style={ { backgroundColor: '#fff' } }\n                                    className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                                    ref={ option4reactQuill }\n                                    id=\"editor\"\n                                    modules={ modules }\n                                    placeholder=\"Option 4\"\n                                    theme=\"snow\"\n                                    onChange={ (e) => setOptions4(e) }\n                                />\n                            </div>\n                            <img className='w-20 hover:w-full duration-300 shadow-sm ' src={ OptionsMedia4 } />\n                        </div>\n                        <div className='flex flex-col'>\n                            <div className='flex items-center'>\n                                <input onClick={ () => setcorrectOption(5) } className='mr-2 w-4 h-4' name='options' type='radio' />\n                                {/* <input onChange={ (e) => setOptions5(e.target.value) } className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"option 5\" /> */ }\n                                {/* <input className='bg-gray-200 w-full rounded-sm p-2' type='file' accept=\"image/*\" onChange={ (e) => {\n                                    _uploadmedia(e.target.files[ 0 ], 'o5')\n                                } } /> */}\n                                <ReactQuill\n                                    style={ { backgroundColor: '#fff' } }\n                                    className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                                    ref={ option5reactQuill }\n                                    id=\"editor\"\n                                    modules={ modules }\n                                    placeholder=\"Option 5\"\n                                    theme=\"snow\"\n                                    onChange={ (e) => setOptions5(e) }\n                                />\n                            </div>\n                            <img className='w-20 hover:w-full duration-300 shadow-sm ' src={ OptionsMedia5 } />\n                        </div>\n                    </div>\n                </div>\n            }\n\n            <h3 className=\"text-lg font-semibold leading-tight my-4\">Write Solution</h3>\n            {/* <textarea onChange={ (e) => {\n                setExplanation(e.target.value)\n            } } className=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                rows=\"5\" placeholder=\"Solution...\"></textarea> */}\n            <ReactQuill\n                style={ { backgroundColor: '#fff' } }\n                className='shadow form-textarea mt-1 block w-full border rounded w-full text-gray-700 leading-tight focus:outline-none focus:shadow-outline'\n                ref={ solutionReactQuill }\n                id=\"editor\"\n                modules={ modules }\n                placeholder=\"Write solution\"\n                theme=\"snow\"\n                onChange={ (e) => setExplanation(e) }\n            />\n\n            {/* <p dangerouslySetInnerHTML={{__html: Explanation}}></p> */ }\n\n            {/* { isPara == 'paragraph' ? */ }\n            <div className=\"w-full mx-auto\">\n                <div className=\"py-8\">\n                    <div>\n                        <h2 className=\"text-2xl font-semibold leading-tight\">Question Data</h2>\n                    </div>\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div\n                            className=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\"\n                        >\n                            <table className=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            Question and options\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            correctOption\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            paragraph\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            Level\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        DESC.map((res, i) => (\n                                            <tr key={ i }>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <div className=\"flex flex-col\">\n                                                        <p dangerouslySetInnerHTML={ { __html: res.question } } className=\"text-gray-900 whitespace-no-wrap\"></p>\n                                                        <br></br>\n                                                        { res.option && res.option.map((ans, index) => (\n                                                            <li dangerouslySetInnerHTML={ { __html: ans.option } } key={ i + index + 'p' }\n                                                                className=\"text-gray-600 whitespace-no-wrap\">\n                                                            </li>\n                                                        )) }\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <p dangerouslySetInnerHTML={ { __html: res.correctOption } } className=\"text-gray-600 whitespace-no-wrap\"></p>\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <p dangerouslySetInnerHTML={ { __html: res.paragraph } } className=\"text-gray-900 whitespace-no-wrap\"></p>\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <span\n                                                        className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\"\n                                                    >\n                                                        <span\n                                                            aria-hidden\n                                                            className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\"\n                                                        ></span>\n                                                        <span className=\"relative\">{ Level }</span>\n                                                    </span>\n                                                </td>\n                                                <td\n                                                    className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                >\n                                                    <button\n                                                        type=\"button\"\n                                                        className=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                    >\n                                                        <svg\n                                                            className=\"inline-block h-6 w-6 fill-current\"\n                                                            viewBox=\"0 0 24 24\"\n                                                        >\n                                                            <path\n                                                                d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                            />\n                                                        </svg>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        )) }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* : null } */ }\n\n            <div className='flex flex-row '>\n\n                { isPara == 'paragraph' ?\n                    <div className=\"flex items-center justify-between mr-10 p-2\">\n                        <button onClick={ () => _AddMore() } className=\"bg-indigo-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                            Add Questions\n                        </button>\n                    </div>\n                    : isPara == 'single' && DESC.length < 1 && <div className=\"flex items-center justify-between mr-10 p-2\">\n                        <button onClick={ () => _AddMore() } className=\"bg-indigo-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                            Add Questions\n                        </button>\n                    </div> }\n                { DESC.length > 0 ?\n                    <div className=\"flex items-center justify-between p-2\">\n                        <button onClick={ () => _SubmitQuestion() } className=\"bg-indigo-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                            Submit\n                        </button>\n                    </div>\n                    : null\n                }\n            </div>\n\n            <div>\n\n                <div className=\"mx-auto\">\n                    <div className=\"py-8\">\n                        <div>\n                            <h2 className=\"text-2xl font-semibold leading-tight\">All Questions</h2>\n                        </div>\n                        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                            <div\n                                className=\"inline-block min-w-full shadow-md rounded-lg overflow-x-auto selectTestHeight\"\n                            >\n                                <table className=\"min-w-full leading-normal\">\n                                    <thead>\n                                        <tr>\n                                            <th\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                S.no\n                                            </th>\n                                            <th\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                Question and options\n                                            </th>\n                                            <th\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                paragraph\n                                            </th>\n                                            {/* <th\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                Question Description\n                                            </th> */}\n                                            <th\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                Level\n                                            </th>\n                                            <th\n                                                className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100\"\n                                            ></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.map((res, i) => (\n                                                <tr key={ i }>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                            {/* { res.Subjectid } */ }\n                                                        </p>\n                                                        <p className=\"text-gray-600 whitespace-no-wrap\">{ i + 1 }</p>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p dangerouslySetInnerHTML={ { __html: res.question } } className=\"text-gray-900 font-semibold whitespace-no-wrap\">\n                                                        </p>\n                                                        { res.questionoption.map((ans) => (\n                                                            <li dangerouslySetInnerHTML={ { __html: ans.option } } className=\"text-gray-600 whitespace-no-wrap\"></li>\n                                                        )) }\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p dangerouslySetInnerHTML={ { __html: res.paragraph } } className=\"text-gray-900 whitespace-no-wrap\"></p>\n                                                        <p dangerouslySetInnerHTML={ { __html: res.questionDesc } } className=\"text-gray-600 whitespace-no-wrap\"></p>\n                                                    </td>\n                                                    {/* <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p dangerouslySetInnerHTML={ { __html: res.questionDesc } } className=\"text-gray-600 whitespace-no-wrap\"></p>\n                                                    </td> */}\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <span\n                                                            className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\"\n                                                        >\n                                                            <span\n                                                                aria-hidden\n                                                                className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\"\n                                                            ></span>\n                                                            <span className=\"relative\">{ res.questionLevel }</span>\n                                                        </span>\n                                                    </td>\n                                                    {/* <td\n                                                        className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                    >\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                        >\n                                                            <svg\n                                                                className=\"inline-block h-6 w-6 fill-current\"\n                                                                viewBox=\"0 0 24 24\"\n                                                            >\n                                                                <path\n                                                                    d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                                />\n                                                            </svg>\n                                                        </button>\n                                                    </td> */}\n                                                </tr>\n                                            )) }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div >\n\n    );\n};\n\n\n\nexport default Admin;\n","//import liraries\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component, useContext, useEffect, useRef, useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { options, ToastInfo, ToastUpdate, uploadToCloud } from '../api/Client';\nimport CourseListContext from '../context/AllprojectsContext';\n\n// create a component\nconst AddCourse = () => {\n\n    // const [ CourseList, setCourseList ] = useState([])\n    const { courseList, setcourseList } = useContext(CourseListContext)\n    const [ CourseName, setCourseName ] = useState()\n    const [ CourseDesc, setCourseDesc ] = useState()\n    const [ CourseThumb, setCourseThumb ] = useState()\n    console.log(\"🚀 ~ file: addCourse.js ~ line 17 ~ AddCourse ~ CourseThumb\", CourseThumb)\n    const toastid = useRef()\n\n    async function _SubmitQuestion() {\n\n        const data = {\n            courseName: CourseName,\n            courseDesc: CourseDesc,\n            thumbnail: CourseThumb\n        }\n\n        toastid.current = ToastInfo('Adding course')\n        try {\n\n            const res = await axios.post(process.env.REACT_APP_API + '/courseUpload', data, options)\n            console.log(\"🚀 ~ file: addCourse.js ~ line 22 ~ _SubmitQuestion ~ res\", res.data)\n            if (res.status == 200) {\n                ToastUpdate(toastid.current, 'Course added Successfully')\n                setCourseDesc()\n                setCourseName()\n                setCourseThumb()\n                _getCourse()\n\n            }\n        }\n        catch (err) {\n            ToastUpdate(toastid.current, 'Something went wrong' + err, 'ERROR')\n        }\n        finally {\n\n        }\n\n    }\n    const _getCourse = async () => {\n        const res = await axios.get(process.env.REACT_APP_API + '/course', options)\n        console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", res.data)\n        if (res.status == 200) {\n            // alert('success')\n            setcourseList(res.data)\n        }\n    }\n    useEffect(() => {\n        _getCourse()\n    }, [])\n\n    const _uploadmedia = async (file) => {\n\n        let toastid = ToastInfo('Uploading Image')\n        if (file.type == 'image/jpg' || file.type == 'image/jpeg' || file.type == 'image/png' || file.type == 'image/gif') {\n            const resp = await uploadToCloud(file);\n            let data = resp.data\n            setCourseThumb(data.secure_url)\n            ToastUpdate(toastid, 'Image Uploaded Successfully')\n        }\n        else {\n            toast.error('Please choose image with JPG,JPEG,PNG,GIF format only ')\n            setCourseThumb()\n        }\n    }\n    return (\n\n        <div className='m-10'>\n            <ToastContainer />\n            <div class=\"mb-4 bg-gray-100 p-4 rounded-md\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"name\">\n                    Course Name\n                </label>\n                <input defaultValue={ CourseName } onChange={ (e) => setCourseName(e.target.value) }\n                    class=\"appearance-none  rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:outline\" id=\"name\" type=\"text\" placeholder=\"Text input\" />\n            </div>\n\n            <div class=\"mb-4 bg-gray-100 p-4 rounded-md\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Course Details\n                    <textarea onChange={ (e) => setCourseDesc(e.target.value) }\n                        class=\"form-textarea mt-1 block w-full  rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" rows=\"5\" placeholder=\"Textarea\">{ CourseDesc }</textarea>\n                </label>\n            </div>\n            <div class=\"mb-4 bg-gray-100 p-4 rounded-md\">\n                <label class=\"block text-gray-500 text-sm font-bold mb-2\" for=\"name\">\n                    Course Thumbnail\n                </label>\n                <div class=\"m-4\">\n                    <div class=\"flex items-center justify-center w-full\">\n                        <label\n                            class=\"flex  cursor-pointer flex-col w-full h-32 border-4 border-blue-200 border-dashed hover:bg-white hover:border-gray-300\">\n                            <div class=\"flex flex-col items-center justify-center pt-7\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-8 h-8 text-gray-400 group-hover:text-gray-600\"\n                                    fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                                </svg>\n                                <p class=\"pt-1 text-sm tracking-wider text-gray-400 group-hover:text-gray-600\">\n                                    Attach a file</p>\n                            </div>\n                            <input onChange={ (e) => _uploadmedia(e.target.files[ 0 ]) } accept=\"image/*\" type=\"file\" class=\"opacity-0\" />\n                        </label>\n                    </div>\n                    { CourseThumb == null || CourseThumb == \"\" || CourseThumb == undefined ? null :\n                        <img src={ CourseThumb } />\n                    }\n                </div>\n            </div>\n\n\n\n            <div class=\"flex items-center justify-between\">\n                <button onClick={ () => _SubmitQuestion() } class=\"bg-indigo-500 w-full hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                    Submit course\n                </button>\n            </div>\n\n            <div>\n\n                <div class=\"container mx-auto\">\n                    <div class=\"py-8\">\n                        <div>\n                            <h2 class=\"text-2xl font-semibold leading-tight\">All Courses</h2>\n                        </div>\n                        <div class=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                            <div\n                                class=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\"\n                            >\n                                <table class=\"min-w-full leading-normal\">\n                                    <thead>\n                                        <tr>\n                                            <th class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Thumbnail and Course Title\n                                            </th>\n                                            <th style={ { maxWidth: '40vw' } } class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Course Description\n                                            </th>\n                                            <th class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-right text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                More\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            courseList.map((res, i) => (\n                                                <tr key={ i }>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <div class=\"flex items-center\">\n                                                            <div class=\"flex-shrink-0 w-20 h-20\">\n                                                                <img class=\"w-full h-full rounded-lg\"\n                                                                    src={ res.thumbnail } alt=\"thumbnail\" />\n                                                            </div>\n                                                            <div class=\"ml-3\">\n                                                                <p class=\"text-gray-900 whitespace-no-wrap\">\n                                                                    { res.courseName }\n                                                                </p>\n                                                                {/* <p class=\"text-gray-600 whitespace-no-wrap\">{ 'Course' + i }</p> */ }\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                    <td style={ { maxWidth: '40vw' } } class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p style={ { whiteSpace: 'pre-line' } } class=\"text-gray-900 break-words font-semibold whitespace-no-wrap\">{ res.courseDesc }</p>\n                                                    </td>\n                                                    <td class=\"px-2 py-5 border-b border-gray-200 bg-white text-sm text-right\">\n                                                        <button type=\"button\" class=\"inline-block text-gray-500 hover:text-gray-700\">\n                                                            <svg class=\"inline-block h-6 w-6 fill-current\" viewBox=\"0 0 24 24\"     >\n                                                                <path d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\" />\n                                                            </svg>\n                                                        </button>\n                                                    </td>\n                                                </tr>\n                                            )) }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div >\n\n    );\n};\n\n\n\nexport default AddCourse;\n","//import liraries\nimport axios from 'axios';\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastInfo, ToastUpdate, ToastUpdateErr } from '../api/Client';\n\n// create a component\nconst AddSubject = () => {\n\n    const [ isPara, setPara ] = useState(false)\n    const [ subjectName, setsubjectName ] = useState()\n    const [ subjectDesc, setsubjectDesc ] = useState()\n    const [ SubjectList, setSubjectList ] = useState([])\n    const [ CourseList, setCourseList ] = useState([])\n    const toastid = useRef()\n\n    const [ data, setdata ] = useState([])\n    const courseiD = useRef(null)\n\n\n    async function _SubmitQuestion() {\n\n        const data = {\n            subjectName: subjectName,\n            subjectDesc: subjectDesc,\n            courseId: courseiD.current\n        }\n        const options = {\n            headers: {\n                'Content-type': 'application/json',\n                \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n            }\n        };\n        toastid.current = ToastInfo('Adding subject')\n        try {\n            const res = await axios.post(process.env.REACT_APP_API + '/subjectUpload', data, options)\n            console.log(\"🚀 ~ file: addSubject.js ~ line 35 ~ _SubmitQuestion ~ res\", res.data)\n            if (res.status == 200) {\n                _getSubjectList()\n                ToastUpdate(toastid.current, \"Subject added\");\n            }\n        }\n        catch (err) {\n            ToastUpdateErr(toastid.current, \"Error Something Went wrong\" + err);\n        }\n\n    }\n\n    const _getSubjectList = async () => {\n        const ressubject = await axios.get(process.env.REACT_APP_API + '/subject')\n        console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", ressubject.data)\n        if (ressubject.status == 200) {\n            // alert('success')\n            setSubjectList(ressubject.data)\n        }\n    } \n    useEffect(async () => {\n        const res = await axios.get(process.env.REACT_APP_API + '/course')\n        console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", res.data)\n        if (res.status == 200) {\n            // alert('success')\n            setCourseList(res.data)\n        }\n\n        try {\n            _getSubjectList()           \n        }\n        catch (err) {\n            toast.error(err)\n        }\n    }, [])\n\n    return (\n\n        <div className='m-10'>\n            <div class=\"mb-4\">\n                <ToastContainer />\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-state\">\n                    Select Course\n                </label>\n                <select onChange={ (e) => courseiD.current = e.target.value }\n                    class=\"block appearance-none mt-5 w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                    <option>Course dropdown</option>\n                    { CourseList[ 0 ] && CourseList.map((res) => (\n                        <option key={ res?.courseId } value={ res?.courseId } >{ res.courseName }</option>\n                    )) }\n                </select>\n            </div>\n\n\n            <div class=\"mb-4\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"name\">\n                    Subject Name\n                </label>\n                <input onChange={ (e) => setsubjectName(e.target.value) } class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"English / Hindi / Maths\" />\n            </div>\n            <div class=\"mb-4\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Subject Details\n                    <textarea onChange={ (e) => setsubjectDesc(e.target.value) }\n                        class=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" rows=\"5\" placeholder=\"Textarea\"></textarea>\n                </label>\n            </div>\n            <div class=\"flex items-center justify-between\">\n                <button onClick={ () => _SubmitQuestion() } class=\"bg-blue-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                    Submit\n                </button>\n            </div>\n\n            <div class=\"container mx-auto\">\n                <div class=\"py-8\">\n                    <div>\n                        <h2 class=\"text-2xl font-semibold leading-tight\">All Subjects</h2>\n                    </div>\n                    <div class=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div\n                            class=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\"\n                        >\n                            <table class=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n                                            Subject Title\n                                        </th>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n                                            Subject Description\n                                        </th>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n\n                                        </th>\n\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100\"\n                                        ></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        SubjectList.map((res, i) => (\n                                            <tr>\n                                                <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <div class=\"flex\">\n                                                        {/* <div class=\"flex-shrink-0 w-10 h-10\">\n                                                <img\n                                                    class=\"w-full h-full rounded-full\"\n                                                    src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.2&w=160&h=160&q=80\"\n                                                    alt=\"\"\n                                                />\n                                            </div> */}\n                                                        <div class=\"ml-3\">\n                                                            <p class=\"text-gray-900 whitespace-no-wrap\">\n                                                                { res.subjectName }\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <p style={ { whiteSpace: 'pre-line' } } class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.subjectDesc }</p>\n                                                </td>\n                                                <td\n                                                    class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                >\n                                                    <button\n                                                        type=\"button\"\n                                                        class=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                    >\n                                                        <svg\n                                                            class=\"inline-block h-6 w-6 fill-current\"\n                                                            viewBox=\"0 0 24 24\"\n                                                        >\n                                                            <path\n                                                                d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                            />\n                                                        </svg>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        )) }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\n\n\nexport default AddSubject;\n","export default __webpack_public_path__ + \"static/media/drag.6434dc0c.svg\";","//import liraries\nimport axios from 'axios';\nimport React, { Component, useContext, useEffect, useState } from 'react';\nimport ReactDragListView from 'react-drag-listview'\nimport { toast, ToastContainer } from 'react-toastify';\nimport CourseListContext from '../context/AllprojectsContext';\nimport dragicon from '../resources/drag.svg'\n// create a component\n\nvar selectedQuestionList = []\nconst CreateTest = (params) => {\n\n    const options = {\n        headers: {\n            'Content-type': 'application/json',\n            \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n        }\n    };\n\n    const [isPara, setPara] = useState(false)\n    const [TestName, setTestName] = useState(null)\n    const [SubjectList, setSubjectList] = useState([\n        { \"id\": 0, \"name\": \"Subject 1\" },\n        { \"id\": 1, \"name\": \"Subject 2\" },\n        { \"id\": 2, \"name\": \"Subject 3\" }\n    ])\n    const [CourseList, setCourseList] = useState([])\n    const [Options, setOptions] = useState([])\n    let option1, option2, option3, option4 = null\n    const { courseList, setcourseList } = useContext(CourseListContext)\n    const [isvideo, setVideo] = useState(false)\n    const [Subjectid, setSubjectid] = useState('')\n    const [courseId, setcourseId] = useState('')\n    const [chapterId, setchapterId] = useState('')\n    const [totalTime, settotalTime] = useState(null)\n    const [rule, setrule] = useState(null)\n    const [topicId, settopicId] = useState('')\n    const [ChapterList, setChapterList] = useState([])\n    const [topicList, settopicList] = useState([])\n    const [TestNamePara, setTestNamePara] = useState()\n    const [QuestionList, setQuestionList] = useState([])\n    const [data, setdata] = useState([])\n    const [CreateSection, setCreateSection] = useState([{\n        sectionId: Date.now(),\n        sectionName: \"\",\n        SectionTime: 0,\n        positiveMarks: 0,\n        negativeMarks: 0,\n        QuestionList: [],\n        disable: false,\n        questionAttempt: 0,\n    }])\n    const [selectedSection, setselectedSection] = useState(0);\n    const [examTypeList, setExamTypeList] = useState([]);\n    const [examTypeFlag, setExamTypeFlag] = useState(null);\n    const [examLevelFlag, setExamLevelFlag] = useState(null);\n    \n    const [addMoreSectionFlag, setAddMoreSectionFlag] = useState(false);\n    \n\n    \n\n    async function _SubmitTest() {\n\n        const datas = {\n            TestTitle: TestName,\n            subjectId: Subjectid,\n            topicId: topicId,\n            chapterId: chapterId,\n            totaltime: totalTime,\n            rule: rule,\n            courseId: courseId,\n            exam_type: TestNamePara,\n            examLevel: examLevelFlag,\n            Section: CreateSection\n        }\n\n        if(examLevelFlag == 1 || examLevelFlag == 2) {\n            datas['chapterId'] = undefined;\n            datas['topicId'] = undefined;\n        }\n        if(examLevelFlag == 3) {\n            datas['topicId'] = undefined;\n        }\n\n        \n        console.log(\"🚀 ~ file: createTest.js ~ line 63 ~ _SubmitTest ~ data\", datas)\n        \n        try {\n            const res = await axios.post(process.env.REACT_APP_API + '/createtest', datas, options)\n            console.log(\"🚀 ~ file: addSubject.js ~ line 35 ~ _SubmitQuestion ~ res\", res.data)\n            if (res.status == 200) {\n                toast.success('Test created successfully', {\n                    position: \"top-right\",\n                    autoClose: 1000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }\n        catch (err) {\n            toast.error('Error :' + err, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n\n    }\n\n\n    const _getQues = async () => {\n        setQuestionList([])\n        if(Subjectid || chapterId || topicId) {\n            params.setLoader(true);\n            let reqParam = {};\n                reqParam['subjectid'] = Subjectid || undefined;\n                reqParam['chapterid'] = chapterId || undefined;\n                reqParam['topicid'] = topicId || undefined;\n            const res = await axios.get(process.env.REACT_APP_API + '/question', {params: reqParam})\n            \n            if (res.status == 200) {\n                \n                let finalRes = res.data.map((data, index)=>{\n                    CreateSection[selectedSection].QuestionList.map((res, i) => {\n                        if(res.questionId == data.questionId) {\n                            data['checked'] = true;\n                        }\n                        \n                    });\n                    if(typeof data['explantation'] == 'object'){\n                        data['solution'] = data['explantation']?.q;\n                    }else {\n                        data['solution'] = data['explantation'];\n                    }\n                    return data;\n                })\n                console.log(\"🚀 ~ file: Admin.js ~ line 32 ~ useEffect ~ res.data\", finalRes)\n                setQuestionList(finalRes)\n            }\n            \n            params.setLoader(false);\n        }\n    }\n\n    const _getExamType = async (courseId) => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/test-type', options)\n        if (res.status == 200) {\n            setExamTypeList(res.data);\n            console.log(\"zzzzzzz\",res.data);\n        }\n        params.setLoader(false);\n    }\n\n    const _getSubject = async (courseId) => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/subject/' + courseId, options)\n        if (res.status == 200) {\n            setSubjectList(res.data)\n        }\n        params.setLoader(false);\n    }\n\n    const _getchapter = async (Subjectid) => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/chapter/' + Subjectid, options)\n        if (res.status == 200) {\n            setChapterList(res.data)\n        }\n        params.setLoader(false);\n    }\n\n    const _gettopic = async (chapterId) => {\n        params.setLoader(true);\n        const res = await axios.get(process.env.REACT_APP_API + '/topic/' + chapterId, options)\n        console.log(\"🚀 ~ file: addquestion.js ~ line 79 ~ const_gettopic= ~ res\", res.data)\n        if (res.status == 200) {\n            settopicList(res.data)\n        }\n        params.setLoader(false);\n    }\n\n    useEffect(()=>{\n        _getExamType();\n    },[])\n\n    useEffect(async () => {\n        _getQues()\n    }, [courseId, topicId, Subjectid, chapterId, selectedSection ]);\n\n    const onSelectCourse =(e) => {\n        e.preventDefault();\n        setSubjectid(\"\");\n        setSubjectList([]);\n        setchapterId(\"\");\n        setChapterList([]);\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setcourseId(e.target.value);\n         _getSubject(e.target.value);\n    }\n\n    const onSelectSubject =(e) => {\n        e.preventDefault();\n        setchapterId(\"\");\n        setChapterList([]);\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setSubjectid(e.target.value);\n        _getchapter(e.target.value);\n    }\n\n    const onSelectChapter =(e) => {\n        e.preventDefault();\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setchapterId(e.target.value);\n        _gettopic(e.target.value);\n    }\n\n\n\n    const _UpdateTestSection = () => {\n\n\n    }\n\n    const _radioSection = (ind) => {\n        console.log(\"this test\",CreateSection, ind);\n        setselectedSection(ind);\n        let CreateNewSection = CreateSection.map((res, i) => {\n            if(i == ind) {\n                res.disable = false;\n            } else {\n                 res.disable = true;\n            }\n            return res;\n            \n        });\n        setCreateSection(CreateNewSection);\n        selectedQuestionList = [];\n\n        selectedQuestionList = CreateSection[ind].QuestionList.filter((qes) => {\n                return qes;\n                })\n\n        // let newQues = CreateSection[selectedSection].QuestionList.filter((qes) => {\n        //     if(res.questionId != qes.questionId){\n        //         return qes;\n        //     }\n        // })\n\n        // selectedQuestionList = selectedQuestionList.filter((qes) => {\n        //     if(res.questionId != qes.questionId){\n        //         return qes;\n        //     }\n        // })\n\n        // CreateSection[selectedSection].QuestionList = newQues;\n        // setCreateSection(CreateSection)\n    }\n\n\n    const addMoreSection = () => {\n        \n        if (CreateSection.length < 5) {\n            selectedQuestionList = [];\n            let CreateNewSection = CreateSection.map((res, i) => {\n                res.disable = true;\n                return res;\n            });\n            setCreateSection(CreateNewSection);\n            \n            const newSec = { \n                sectionId: Date.now(),\n                 sectionName: \"\", \n                 SectionTime: 0, \n                 positiveMarks: 0, \n                 negativeMarks: 0, \n                 QuestionList: [], \n                 questionAttempt: 0,\n                 disable: false \n                };\n                setCreateSection([...CreateNewSection, ...[newSec]]);\n                setselectedSection(CreateSection.length);\n        } else {\n            return;\n        }\n    }\n\n\n    // useEffect(()=>{\n    //     setselectedSection(CreateSection.length - 1);\n    //     console.log(\"\",selectedSection);\n    // },[selectedSection])\n\n    const checkIfSeected = (ques, allCheckedQues) => {\n        let flag = true;\n        CreateSection[selectedSection].QuestionList.map((res, i) => {\n            if(res.questionId == ques.questionId && res.checked) {\n                flag = true;\n            }\n        });\n        return flag;\n    }\n\n    useEffect(()=>{\n        if(examTypeFlag != null) {\n            if(examTypeFlag == \"1\") {\n                setAddMoreSectionFlag(true);\n            } else {\n                setAddMoreSectionFlag(false);\n                let sec = [CreateSection[0]];\n                setCreateSection(sec);\n            }\n        }\n        \n    },[examTypeFlag]);\n\n    return (\n\n        <div className='m-10'>\n            <ToastContainer />\n\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Name\n                </label>\n                <input onChange={(e) => setTestName(e.target.value)} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    id=\"name\" type=\"text\" placeholder=\"Test Name\" />\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Exam Type\n                </label>\n                    <select onChange={(e) => {\n                        setTestNamePara(e.target.value);\n                        examTypeList.map((res) => {\n                            if(res.id ==  e.target.value) {\n                                setExamTypeFlag(res.isMultiSection);\n                                setExamLevelFlag(res.level);\n                            }\n                        });\n                    }}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        {examTypeList[0] && examTypeList.map((res) => (\n                            <option value={res.id}>{res.type_name}</option>\n                        ))}\n                    </select>\n            </div>\n\n            {/* <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Details\n                    <textarea className=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        rows=\"5\" placeholder=\"Test Details\"></textarea>\n                </label>\n            </div> */}\n\n\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Name\n                </label>\n                <div className='flex flex-row justify-between flex-wrap items-center'>\n\n                    {CreateSection.map((res, index) => (\n                        <div className='flex mb-2'>\n                            <input onClick={() => _radioSection(index) }\n                                type='radio' name='section' className={`mr-2 sec-${index}`} />\n                            <input onChange={(e) => { CreateSection[index].sectionName = e.target.value; setCreateSection(CreateSection); }}  disabled={CreateSection[index].disable}\n                            className={`sec-${index} shadow appearance-none border mr-2 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\n                                id=\"name\" type=\"text\" placeholder={res.sectionName ? res.sectionName : \"Section Name\"} />\n                            <input onChange={(e) => { CreateSection[index].SectionTime = parseInt(e.target.value); setCreateSection(CreateSection); }} disabled={CreateSection[index].disable}\n                            className={`sec-${index} shadow appearance-none border mr-2 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\n                                id=\"name\" type=\"text\" placeholder={res.SectionTime ? res.SectionTime : \"0 Min\"} />\n                            <input onChange={(e) => { CreateSection[index].negativeMarks = parseInt(e.target.value); setCreateSection(CreateSection); }} disabled={CreateSection[index].disable}\n                            className={`sec-${index} shadow appearance-none border mr-2 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\n                                id=\"name\" type=\"text\" placeholder={res.negativeMarks ? res.negativeMarks : \"-ve Marks -1\"} />\n                            <input onChange={(e) => { CreateSection[index].positiveMarks = parseInt(e.target.value); setCreateSection(CreateSection); }} disabled={CreateSection[index].disable}\n                            className={`sec-${index} shadow appearance-none border mr-2 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\n                                id=\"name\" type=\"text\" placeholder={res.positiveMarks ? res.positiveMarks : \"+ve Marks 3\"} />\n                            <input onChange={(e) => { CreateSection[index].questionAttempt = parseInt(e.target.value); setCreateSection(CreateSection); }} disabled={CreateSection[index].disable}\n                            className={`sec-${index} shadow appearance-none border mr-2 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\n                                id=\"name\" type=\"text\" placeholder={res.questionAttempt ? res.questionAttempt : \"Ques need to attempt\"} />\n                        </div>\n                    ))}\n                    <button onClick={() => addMoreSection()} style={{display: (addMoreSectionFlag ? 'block' : \"none\")}} className='rounded-lg'>+ Add More Section</button>\n                </div>\n            </div>\n\n\n            {/* {CreateSection.map((secVal, Secindex) => (\n            <>\n            { ((secVal.disable) ? null:\n            <div  > */}\n            <div className=\"mb-4\">\n\n                <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                    Allow Switching Section\n                </label>\n                <label className=\"inline-flex items-center mr-4\">\n                    <input type='radio' name='sectionSwitch' onChange={() => setrule(true)} />\n                    <span className=\"ml-2\">True</span>\n                </label>\n                <label className=\"inline-flex items-center\">\n                    <input type='radio' name='sectionSwitch' onChange={() => setrule(false)} />\n                    <span className=\"ml-2\">false</span>\n                </label>\n                <br></br>\n                <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                    Select Course\n                </label>\n                <div className=\"relative\">\n                    <select onChange={onSelectCourse} className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        {courseList[0] && courseList.map((res) => (\n                            <option value={res.courseId}>{res.courseName}</option>\n                        ))}\n                    </select>\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Subject\n                    </label>\n                    <select onChange={onSelectSubject} defaultValue={\"\"}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        {SubjectList[0] && SubjectList.map((res) => (\n                            <option value={res.Id}>{res.subjectName}</option>\n                        ))}\n                    </select>\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Chapter\n                    </label>\n                    <select onChange={onSelectChapter} defaultValue={\"\"}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Select dropdown</option>\n                        {ChapterList[0] && ChapterList.map((res) => (\n                            <option value={res.chapterId}>{res.chapterName}</option>\n                        ))}\n                    </select>\n\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Topic\n                    </label>\n                    <select onChange={(e) => settopicId(e.target.value)}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"} >Select dropdown</option>\n                        {topicList[0] && topicList.map((res) => (\n                            <option value={res.Id}>{res.topicName}</option>\n                        ))}\n                    </select>\n                    <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"w-full mx-auto\">\n                <div className=\"py-8\">\n                    <div><h2 className=\"text-xl font-semibold leading-tight\">Add Question in Test</h2></div>\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div className=\"inline-block min-w-full shadow-md rounded-lg overflow-x-auto selectTestHeight\">\n                            <table className=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"px-2 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase\">\n\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            Question and options\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            correctOption\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            type\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            Level\n                                        </th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        QuestionList.map((res, i) => (\n                                            //  console.log(\"🚀 ~ file: createTest.js ~ line 267 ~ CreateTest ~ res\", res),\n                                            (res.courseCourseId == courseId || res.chapterChapterId == chapterId ||\n                                                res.subjectId == Subjectid || res.topicId == topicId) ?\n                                                <tr>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <input onClick={() => {\n                                                            console.log(\"1\",res);\n                                                            if(res['checked'] == undefined ||res['checked'] == null){\n                                                                console.log(\"2\",res);\n                                                                res['checked'] = true;\n                                                            }else{\n                                                                console.log(\"3\",res);\n                                                                res['checked'] =!res['checked'];\n                                                            }\n                                                            if(res['checked']){\n                                                                selectedQuestionList.push(res);\n                                                                console.log(\"4\",selectedQuestionList);\n                                                                console.log(\"5\",selectedSection);\n                                                                CreateSection[selectedSection].QuestionList = selectedQuestionList;\n                                                                setCreateSection(CreateSection)\n                                                            }else {\n                                                                let newQues = CreateSection[selectedSection].QuestionList.filter((qes) => {\n                                                                    if(res.questionId != qes.questionId){\n                                                                        return qes;\n                                                                    }\n                                                                })\n\n                                                                selectedQuestionList = selectedQuestionList.filter((qes) => {\n                                                                    if(res.questionId != qes.questionId){\n                                                                        return qes;\n                                                                    }\n                                                                })\n\n                                                                CreateSection[selectedSection].QuestionList = newQues;\n                                                                setCreateSection(CreateSection)\n                                                            }\n                                                            \n                                                        }\n                                                        } type='checkbox' defaultChecked={res['checked']}/>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <div className=\"ml-3\">\n                                                            <h4 dangerouslySetInnerHTML={{ __html: res.question }} className=\"font-bold text-gray-600 whitespace-no-wrap\"></h4>\n                                                            {/* { res.questionoption.map((ans) => (\n                                                                <li dangerouslySetInnerHTML={{__html:ans.option}} className=\"text-gray-600 whitespace-no-wrap\"></li>\n                                                            )) } */}\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p dangerouslySetInnerHTML={{ __html: res.TestName }} className=\"text-gray-900 font-semibold whitespace-no-wrap\"></p>\n                                                        <p dangerouslySetInnerHTML={{ __html: res.correctOption }} className=\"text-gray-600 whitespace-no-wrap\"></p>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p dangerouslySetInnerHTML={{ __html: res.questionType }} className=\"text-gray-900 whitespace-no-wrap\"></p>\n                                                        <p className=\"text-gray-600 whitespace-no-wrap\"></p>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <span\n                                                            className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\"\n                                                        >\n                                                            <span\n                                                                aria-hidden\n                                                                className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\"\n                                                            ></span>\n                                                            <span className=\"relative\">{res.questionLevel}</span>\n                                                        </span>\n                                                    </td>\n\n                                                </tr>\n                                                : null\n                                        ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* </div>\n            )}\n            </>\n            ))} */}\n            <div className=\"flex items-center justify-between\">\n                <button onClick={() => _SubmitTest()} className=\"bg-blue-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                    Submit\n                </button>\n            </div>\n\n            <div>\n\n\n            </div>\n        </div>\n    );\n};\n\n\n\nexport default CreateTest;\n","//import liraries\nimport axios from 'axios';\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastErr, ToastInfo, ToastUpdate, ToastUpdateErr } from '../api/Client';\n\n\n// create a component\nconst AddChapter = () => {\n\n    const [ isPara, setPara ] = useState(false)\n    const [ chapterName, setchapterName ] = useState()\n    const [ tags, settags ] = useState()\n    const [ chapterDesc, setchapterDesc ] = useState()\n    const [ ChapterList, setChapterList ] = useState([])\n    const [ subjectList, setsubjectList ] = useState([])\n\n    const [ data, setdata ] = useState([])\n    const subjectId = useRef(null)\n\n\n    async function _SubmitQuestion() {\n\n        const data = {\n            chapterName: chapterName,\n            chapterDesc: chapterDesc,\n            subjectId: subjectId.current,\n            tags: tags\n        }\n        const options = {\n            headers: {\n                'Content-type': 'application/json',\n                \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n            }\n        };\n        let toastid = ToastInfo('Adding chapter ...')\n        try {\n            const res = await axios.post(process.env.REACT_APP_API + '/chapterupload', data, options)\n            console.log(\"🚀 ~ file: addSubject.js ~ line 35 ~ _SubmitQuestion ~ res\", res.data)\n            if (res.status == 200) {\n                _getchapterlist()\n                ToastUpdate(toastid, 'chapter addedd successfully');\n            }\n        }\n        catch (err) {\n            ToastUpdateErr(toastid, 'Error :' + err)\n        }\n    }\n    const _getchapterlist = async () => {\n        try {\n            const ressubject = await axios.get(process.env.REACT_APP_API + '/chapter')\n            console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", ressubject.data)\n            if (ressubject.status == 200) {\n                // alert('success')\n                setChapterList(ressubject.data)\n            }\n        }\n        catch (err) {\n            ToastErr('Error :' + err)\n        }\n    }\n    useEffect(async () => {\n        _getchapterlist()\n        try {\n            const res = await axios.get(process.env.REACT_APP_API + '/subject')\n            // console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", res.data)\n            if (res.status == 200) {\n                setsubjectList(res.data)\n            }\n        }\n        catch (err) {\n            ToastErr('Error :' + err)\n        }\n\n    }, [])\n\n    return (\n\n        <div className='m-10'>\n            <div class=\"mb-4\">\n\n                <ToastContainer />\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-state\">\n                    Select Subject\n                </label>\n                <select onChange={ (e) => subjectId.current = e.target.value }\n                    class=\"block appearance-none mt-5 w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                    <option>Subject dropdown</option>\n                    { subjectList[ 0 ] && subjectList.map((res) => (\n                        <option key={ res?.Id } value={ res.Id } >{ res.subjectName }</option>\n                    )) }\n                </select>\n            </div>\n\n            <div class=\"mb-4\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"name\">\n                    Module Name\n                </label>\n                <input onChange={ (e) => setchapterName(e.target.value) } class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"English / Hindi / Maths\" />\n            </div>\n            <div class=\"mb-4\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"name\">\n                    #tags\n                </label>\n                <input onChange={ (e) => settags(e.target.value) } class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"#2022\" />\n            </div>\n            <div class=\"mb-4\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Module Details\n                    <textarea onChange={ (e) => setchapterDesc(e.target.value) }\n                        class=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" rows=\"5\" placeholder=\"Textarea\"></textarea>\n                </label>\n            </div>\n            <div class=\"flex items-center justify-between\">\n                <button onClick={ () => _SubmitQuestion() } class=\"bg-blue-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n                    Submit\n                </button>\n            </div>\n            <div class=\"container mx-auto\">\n                <div class=\"py-8\">\n                    <div>\n                        <h2 class=\"text-2xl font-semibold leading-tight\">All Modules</h2>\n                    </div>\n                    <div class=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div\n                            class=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\"\n                        >\n                            <table class=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n                                            Module Title\n                                        </th>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n                                            Module Description\n                                        </th>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n                                            #Tag\n                                        </th>\n\n\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100\"\n                                        ></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        ChapterList.map((res, i) => (\n                                            <tr>\n                                                <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <div class=\"flex\">\n                                                        {/* <div class=\"flex-shrink-0 w-10 h-10\">\n                                                <img\n                                                    class=\"w-full h-full rounded-full\"\n                                                    src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.2&w=160&h=160&q=80\"\n                                                    alt=\"\"\n                                                />\n                                            </div> */}\n                                                        <div class=\"ml-3\">\n                                                            <p class=\"text-gray-900 whitespace-no-wrap\">\n                                                                { res.chapterName }\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.chapterDesc }</p>\n                                                </td>\n                                                <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.tags }</p>\n                                                </td>\n                                                <td\n                                                    class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                >\n                                                    <button\n                                                        type=\"button\"\n                                                        class=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                    >\n                                                        <svg\n                                                            class=\"inline-block h-6 w-6 fill-current\"\n                                                            viewBox=\"0 0 24 24\"\n                                                        >\n                                                            <path\n                                                                d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                            />\n                                                        </svg>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        )) }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\n\n\nexport default AddChapter;\n","//import liraries\nimport axios from 'axios';\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// create a component\nconst AddTopic = () => {\n\n    const [ isPara, setPara ] = useState(false)\n    const [ topicName, settopicName ] = useState()\n    const [ TopicDesc, setTopicDesc ] = useState()\n    const [ topicList, settopicList ] = useState([])\n    const [ ChapterList, setChapterList ] = useState([])\n\n    const chapterId = useRef(null)\n\n\n    async function _SubmitQuestion() {\n\n        const data = {\n            topicName: topicName,\n            topicDesc: TopicDesc,\n            chapterId: chapterId.current\n        }\n        const options = {\n            headers: {\n                'Content-type': 'application/json',\n                \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n            }\n        };\n        try {\n            const res = await axios.post(process.env.REACT_APP_API + '/topicupload', data, options)\n            console.log(\"🚀 ~ file: addSubject.js ~ line 35 ~ _SubmitQuestion ~ res\", res.data)\n            if (res.status == 200) {\n                window.location.reload();\n                toast.success('Topic addedd successfully', {\n                    position: \"top-right\",\n                    autoClose: 1000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n        }\n        catch (err) {\n            toast.error('Error :' + err, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n\n    }\n    useEffect(async () => {\n        const ressubject = await axios.get(process.env.REACT_APP_API + '/chapter')\n        console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", ressubject.data)\n        if (ressubject.status == 200) {\n            // alert('success')\n            setChapterList(ressubject.data)\n        }\n\n        try {\n\n            const ressubject = await axios.get(process.env.REACT_APP_API + '/topic')\n            console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", ressubject.data)\n            if (ressubject.status == 200) {\n                // alert('success')\n                settopicList(ressubject.data)\n            }\n        }\n        catch (err) {\n\n        }\n    }, [])\n\n    return (\n\n        <div className='m-10'>\n            <div class=\"mb-4\">\n                <ToastContainer />\n                <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" for=\"grid-state\">\n                    Select Module Name\n                </label>\n                <select onChange={ (e) => { console.log(\"id\", e.target.value); chapterId.current = e.target.value } }\n                    class=\"block appearance-none mt-5 w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                    <option>Module dropdown</option>\n                    { ChapterList[ 0 ] && ChapterList.map((res) => (\n                        <option key={ res?.Id } value={ res.chapterId } label={ res.chapterName } >{ res.chapterName }</option>\n                    )) }\n                </select>\n            </div>\n\n\n            <div class=\"mb-4\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"name\">\n                    Topic Name\n                </label>\n                <input onChange={ (e) => settopicName(e.target.value) } class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"name\" type=\"text\" placeholder=\"English / Hindi / Maths\" />\n            </div>\n            <div class=\"mb-4\">\n                <label class=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Topic Details\n                    <textarea onChange={ (e) => setTopicDesc(e.target.value) }\n                        class=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" rows=\"5\" placeholder=\"Textarea\"></textarea>\n                </label>\n            </div>\n            <div class=\"flex items-center justify-between\">\n                <button onClick={ () => _SubmitQuestion() } class=\"bg-blue-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                    Submit\n                </button>\n            </div>\n\n            <div class=\"container mx-auto\">\n                <div class=\"py-8\">\n                    <div>\n                        <h2 class=\"text-2xl font-semibold leading-tight\">All Topic</h2>\n                    </div>\n                    <div class=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div\n                            class=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\"\n                        >\n                            <table class=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n                                            Topic Title\n                                        </th>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n                                            Topic Description\n                                        </th>\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                        >\n\n                                        </th>\n\n                                        <th\n                                            class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100\"\n                                        ></th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        topicList.map((res, i) => (\n                                            <tr>\n                                                <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <div class=\"flex\">\n                                                        {/* <div class=\"flex-shrink-0 w-10 h-10\">\n                                                <img\n                                                    class=\"w-full h-full rounded-full\"\n                                                    src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.2&w=160&h=160&q=80\"\n                                                    alt=\"\"\n                                                />\n                                            </div> */}\n                                                        <div class=\"ml-3\">\n                                                            <p class=\"text-gray-900 whitespace-no-wrap\">\n                                                                { res.topicName }\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.topicDesc }</p>\n                                                </td>\n                                                <td\n                                                    class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                >\n                                                    <button\n                                                        type=\"button\"\n                                                        class=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                    >\n                                                        <svg\n                                                            class=\"inline-block h-6 w-6 fill-current\"\n                                                            viewBox=\"0 0 24 24\"\n                                                        >\n                                                            <path\n                                                                d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                            />\n                                                        </svg>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        )) }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\n\n\nexport default AddTopic;\n","//import liraries\nimport axios from 'axios';\nimport React, { Component, useContext, useEffect, useState } from 'react';\nimport ReactDragListView from 'react-drag-listview'\nimport { toast, ToastContainer } from 'react-toastify';\nimport ReactTooltip from 'react-tooltip';\nimport { ToastInfo, ToastUpdate, uploadToCloud } from '../api/Client';\nimport CourseListContext from '../context/AllprojectsContext';\nimport dragicon from '../resources/drag.svg';\nimport Modal from 'react-modal';\n\n\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  }; \n\n// create a component\nconst Createpackage = (params) => {\n\n    const options = {\n        headers: {\n            'Content-type': 'application/json',\n            \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n        }\n    };\n\n    const [ isPara, setPara ] = useState(false)\n    const [ PackageName, setPackageName ] = useState(null)\n    const [ SubjectList, setSubjectList ] = useState([\n        { \"id\": 0, \"name\": \"Subject 1\" },\n        { \"id\": 1, \"name\": \"Subject 2\" },\n        { \"id\": 2, \"name\": \"Subject 3\" }\n    ])\n    const [ Options, setOptions ] = useState([])\n    const [ FreeCourseVideo, setFreeCourseVideo ] = useState([])\n    const { courseList, setcourseList } = useContext(CourseListContext)\n    const [ Subjectid, setSubjectid ] = useState('')\n    const [ courseId, setcourseId ] = useState('');\n    const [ chapterId, setchapterId ] = useState(\"\")\n    const [ topicId, settopicId ] = useState('')\n    const [ ChapterList, setChapterList ] = useState([])\n    const [ topicList, settopicList ] = useState([])\n    const [ TetsList, setTetsList ] = useState([])\n    const [ VideoList, setVideoList ] = useState([])\n    const [ allStudentList, setAllStudentList ] = useState([])\n    const [ PackageDesc, setPackageDesc ] = useState()\n    const [ Packagethumb, setPackagethumb ] = useState()\n    const [ PackageofficialDesc, setPackageofficialDesc ] = useState()\n    const [ PackagePrice, setPackagePrice ] = useState(null)\n    const [ data, setdata ] = useState([])\n    const [ viewPackage, setViewPackage ] = useState(false)\n    const [ allPackage, setAllPackage ] = useState([]);\n    const [modalIsOpen,setModalIsOpen] = useState(false);\n    const [selectedPackage, setSelectedPackage] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState({\n        packageid: \"\",\n        studentList: []\n    });\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\n\n    const selectedStudentList  = {\n        packageid: \"\",\n        studentList: []\n    };\n    const [ allSearchStudent, setAllSearchStudent ] = useState([])\n    const [ getEditMode, setEditMode ] = useState(false)\n    const [ getEditModePacDetail, setEditModePacDetail ] = useState({})\n\n    const dragProps = {\n\n        onDragEnd(fromIndex, toIndex) {\n            console.log(\"🚀 ~ file: CReatepackage.js ~ line 28 ~ onDragEnd ~ fromIndex, toIndex\", fromIndex, toIndex)\n            const item = data.splice(fromIndex, 1)[ 0 ];\n            data.splice(toIndex, 0, item);\n            setdata([ ...data ]);\n        },\n        nodeSelector: 'tr',\n        handleSelector: 'a'\n    };\n\n    async function _SubmitPackage() {\n\n        let testId = [];\n        \n        data.map((e,i)=>{\n            testId.push({TestId: e.TestId, TestTitle: e.TestTitle})\n        });\n\n        const dataObj = {\n            PackageName: PackageName,\n            Options: Options,\n            PackageDesc: PackageDesc,\n            officialDesc: PackageofficialDesc,\n            PackagePrice: PackagePrice ? parseInt(PackagePrice) : 0,\n            subjectId: Subjectid,\n            topicId: topicId,\n            chapterId: chapterId,\n            courseId: courseId,\n            FreeCourseVideo: FreeCourseVideo,\n            TestList: testId,\n            thumbnail: Packagethumb\n        }\n        if(getEditMode) {\n            dataObj['packageId'] = getEditModePacDetail.packageId;\n        }\n\n       // console.log(dataObj, testId);\n         //return;\n        \n        try {\n            params.setLoader(true);\n            const res = await axios.post(process.env.REACT_APP_API + '/createpackage', dataObj, options)\n            console.log(\"🚀 ~ file: CReatepackage.js ~ line 70 ~ _SubmitPackage ~ res\", res.data)\n            if (res.status == 200) {\n                let msg = 'Package created successfully';\n                if(getEditMode) {\n                    msg = 'Package updated successfully';\n                }\n\n                toast.success(msg, {\n                    position: \"top-right\",\n                    autoClose: 1000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n\n                setTimeout(()=>{\n                    window.location.reload();\n                },2000);\n                \n            }\n            params.setLoader(false);\n        } catch (err) {\n            params.setLoader(false);\n            toast.error('Error :' + err, {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n        }\n\n\n    }\n\n    \n    const onSelectCourse =(e) => {\n        e.preventDefault();\n        setSubjectid(\"\");\n        setSubjectList([]);\n        setchapterId(\"\");\n        setChapterList([]);\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setcourseId(e.target.value);\n         _getSubject(e.target.value);\n          _getVideoByCourse(e.target.value);\n    }\n\n    const onSelectSubject =(e) => {\n        e.preventDefault();\n        setchapterId(\"\");\n        setChapterList([]);\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setSubjectid(e.target.value);\n        _getchapter(e.target.value);\n    }\n\n    const onSelectChapter =(e) => {\n        e.preventDefault();\n        settopicId(\"\");\n        settopicList([]);\n        params.setLoader(true);\n        setchapterId(e.target.value);\n        _gettopic(e.target.value);\n    }\n\n\n\n    const _getTestList = async () => {\n        \n        if(courseId){\n            try{\n                params.setLoader(true);\n\n                let reqParam = {courseId};\n                reqParam['subjectId'] = Subjectid || undefined;\n                reqParam['chapterId'] = chapterId || undefined;\n                reqParam['topicId'] = topicId || undefined;\n\n                // const res = await axios.get(process.env.REACT_APP_API + '/alltest', options ); \n                const res = await axios.get(process.env.REACT_APP_API + '/alltest', {params: reqParam} );\n                if (res.status == 200) {\n                    \n                    if(getEditMode) {\n\n                        let da = res.data.map((d,i) => {\n                            getEditModePacDetail?.testList.map((m,e)=>{\n                                if(d.TestId == m.TestId) {\n                                    d['isEditExist'] = true;\n                                }\n                            })\n                            return d;\n                        })\n                        setTetsList(da);\n                    } else {\n                        setTetsList(res.data);\n                    }\n                    console.log(\"🚀 ~ file: Createpackage.js ~ line 108 ~ axios.get ~ res.data\", res.data)\n                }\n                params.setLoader(false);\n            } catch (err) {\n                params.setLoader(false);\n            }\n        }\n    }\n\n    const _getVideoByCourse = async (courseId) => {\n        try{\n            params.setLoader(true);\n            const res = await axios.get(process.env.REACT_APP_API + '/getvideobycourse/' + courseId, options)\n            \n            if (res.status == 200) {\n                setVideoList(res.data)\n                \n                console.log(\"🚀 ~ file: Createpackage.js ~ line 111 ~ axios.get ~ res.data\", res.data)\n            }\n            params.setLoader(false);\n            \n        } catch (err) {\n            params.setLoader(false);\n        }\n        \n    }\n    \n\n\n    const _getSubject = async (courseId) => {\n        if(courseId){\n            //params.setLoader(true);\n            try{\n                const res = await axios.get(process.env.REACT_APP_API + '/subject/' + courseId, options)\n                if (res.status == 200) {\n                    setSubjectList(res.data)\n                }\n                params.setLoader(false);\n            } catch (err) {params.setLoader(false);}\n            \n        }\n        \n    }\n\n    const _getchapter = async (Subjectid) => {\n        try{\n            params.setLoader(true);\n            const res = await axios.get(process.env.REACT_APP_API + '/chapter/' + Subjectid, options)\n            if (res.status == 200) {\n                setChapterList(res.data);\n            }\n            params.setLoader(false);\n        } catch (err) {\n            params.setLoader(false);\n        }\n       \n    }\n\n    const _gettopic = async (chapterId) => {\n        try{\n            params.setLoader(true);\n            const res = await axios.get(process.env.REACT_APP_API + '/topic/' + chapterId, options)\n            console.log(\"🚀 ~ file: addquestion.js ~ line 79 ~ const_gettopic= ~ res\", res.data)\n            if (res.status == 200) {\n                settopicList(res.data);\n            }\n            params.setLoader(false);\n        } catch (err) {\n            params.setLoader(false);\n        }\n        \n    }\n\n    const _uploadmedia = async (file) => {\n\n        let toastid = ToastInfo('Uploading Image')\n        if (file.type == 'image/jpg' || file.type == 'image/jpeg' || file.type == 'image/png' || file.type == 'image/gif') {\n            const resp = await uploadToCloud(file);\n            let data = resp.data\n            setPackagethumb(data.secure_url)\n            ToastUpdate(toastid, 'Image Uploaded Successfully')\n        }\n        else {\n            toast.error('Please choose image with JPG,JPEG,PNG,GIF format only ')\n            setPackagethumb()\n        }\n    }\n\n    useEffect(() => {\n        _getTestList();\n    }, [courseId, Subjectid, chapterId, topicId]);\n\n    const _getAllPackages = async () => {\n        try{\n            setAllPackage([]);\n            params.setLoader(true);\n            const res = await axios.get(process.env.REACT_APP_API + '/getallpackages', options)\n            console.log(\"getallpackages\", res.data, res.status)\n            if (res.status == 200) {\n                setAllPackage(res.data)\n            }\n            params.setLoader(false);\n        } catch (err) {\n            params.setLoader(false);\n        }\n        \n    }\n\n    const setModalIsOpenToTrue =(packageId)=>{\n        setSelectedPackage(packageId);\n        selectedStudentList['packageid'] = packageId;\n        _getAllStudent();\n        setModalIsOpen(true)\n    }\n\n    const setModalIsOpenToFalse =()=>{\n        selectedStudentList.packageid = \"\";\n        selectedStudentList.studentList = [];\n        setModalIsOpen(false)\n    }\n\n    const handleChange = event => {\n        setSearchTerm(event.target.value);\n        if(event.target.value){\n            let seaStu = allStudentList.filter((data)=>{\n                if(((data.username).toLowerCase()).indexOf((event.target.value).toLowerCase()) != -1) {\n                    return data;\n                }\n            });\n            setAllSearchStudent(seaStu);\n        } else {\n            setAllSearchStudent(allStudentList);\n        }\n         \n      };\n\n    const _getAllStudent = async () => {\n        \n        try{\n            setAllStudentList([]);\n            setAllSearchStudent([]);\n            params.setLoader(true);\n            const res = await axios.get(process.env.REACT_APP_API + '/alluser', {params: {userType: 'student'}})\n            console.log(\"getallstudents\", res.data, res.status)\n            if (res.status == 200) {\n                setAllStudentList(res.data);\n                setAllSearchStudent(res.data);\n            }\n            params.setLoader(false);\n        } catch (err) {\n            params.setLoader(false);\n        }\n    }\n\n    const assignStudentToPackage = async () => {\n        const dataObj = {\n            packageId : selectedStudentList['packageid'],\n            studentList: selectedStudentList['studentList']\n        }\n        \n        try {\n            params.setLoader(true);\n            const res = await axios.post(process.env.REACT_APP_API + '/assignStudentToPackage', dataObj, options)\n            if (res.status == 200) {\n               \n            }\n            params.setLoader(false);\n            setModalIsOpenToFalse();\n        } catch (err) {\n            params.setLoader(false);\n            setModalIsOpenToFalse()\n        }\n    };\n\n    const getPackageById = (pac) => {\n        console.log(pac);\n        setEditMode(true);\n        setEditModePacDetail(pac)\n        _getSubject(pac.courseId);\n        setcourseId(pac.courseId);\n        let da = [ ...data, ...pac.testList ];\n        console.log(da)\n        setdata(da);\n    }\n\n\n    return (\n\n        <div className='m-10'>\n            <ToastContainer />\n            <div className=\"mb-2\">\n                {getEditMode ? \n                <button type=\"button\" onClick={()=>window.location.reload() }  \n             className=\"bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >cancel Edit Mode</button>\n            :\n            <button type=\"button\" onClick={()=> {setViewPackage(viewPackage => !viewPackage);if(!viewPackage){_getAllPackages()}} }  \n            className=\"bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n           >View Packages</button>}\n            \n\n            \n            </div>\n\n            <div className={(viewPackage) ? '' : 'loaderDisplay'}>\n                <div className=\"w-full mx-auto\">\n                        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                            <div className=\"inline-block min-w-full shadow-md rounded-lg overflow-x-auto selectTestHeight\">\n                                <table className=\"min-w-full leading-normal mb-4\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                S.No\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Package Name\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Package Details\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Price\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Total Question\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Assignment\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Action\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {allPackage.map((pac, index) => (\n                                            <tr>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {index + 1}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {pac.name}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {pac.packageDetails}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {pac.price}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {pac.questionCount}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                <button type=\"button\"  onClick={()=>setModalIsOpenToTrue(pac.packageId)}\n                                                    className=\"bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                                                    >Assign Students</button>\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                <button type=\"button\"  onClick={()=>{setViewPackage(viewPackage => !viewPackage);getPackageById(pac)}}\n                                                    className=\"bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                                                    >Edit</button>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                </div>\n            </div>\n\n            <Modal isOpen={modalIsOpen} style={customStyles} ariaHideApp={false}>\n                <button onClick={setModalIsOpenToFalse}>x</button>\n                <div >                            \n                <input className=\"searchbx\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                            value={searchTerm}\n                            onChange={handleChange}\n                        />\n                        </div>\n                <div className=\"w-full mx-auto\">\n                \n                        <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                            <div className=\"inline-block min-w-full shadow-md rounded-lg overflow-x-auto selectTestHeight\">\n                                <table className=\"min-w-full leading-normal mb-4\">\n                                    <thead>\n                                        <tr>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                S.No\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Student Name\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Email Id.\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Phone No.\n                                            </th>\n                                            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                                Action\n                                            </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {allSearchStudent.map((stu, index) => (\n                                            <tr>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {index + 1}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {stu.username}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {stu.email_Id}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                    {stu.mobileNumber}\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                <input type='checkbox'\n                                                    onClick={() => {\n                                                        if(stu['checked']){\n                                                            let student = selectedStudentList['studentList'].filter((selStu)=>{\n                                                                if(selStu.email_Id != stu.email_Id) {\n                                                                    return selStu;\n                                                                }\n                                                            })\n                                                            stu['checked'] = false;\n                                                            selectedStudentList['studentList'] =  student;\n\n                                                        } else {\n                                                            stu['checked'] = true;\n                                                            selectedStudentList['studentList'] =  [...selectedStudentList['studentList'], ...[stu]];\n                                                        }\n                                                        selectedStudentList['packageid'] = selectedPackage;\n                                                        console.log(\"nnnnnnnnnn\", selectedStudentList)\n                                                    }}\n                                                 defaultChecked={stu['checked']}/>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                                <button type=\"button\"  onClick={()=>assignStudentToPackage()}\n                                className=\"bg-blue-500 hover:bg-blue-700 text-white py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                                >Submit</button>\n                            </div>\n                        </div>\n                </div>\n                \n            </Modal>\n\n \n\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Name\n                </label>\n                <input required onChange={ (e) => setPackageName(e.target.value) } className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    id=\"name\" type=\"text\" value={getEditModePacDetail.name} placeholder=\"Package Name\" disabled={getEditMode} />\n            </div>\n\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Package Details\n                    <textarea required value={getEditModePacDetail.packageDetails} disabled={getEditMode} onChange={ (e) => {\n                        console.log(\"🚀 ~ file: Createpackage.js ~ line 186 ~ Createpackage ~ e.target.value\", e.target.value)\n                        setPackageDesc(e.target.value)\n                    } } className=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        rows=\"5\" placeholder=\"Package Details\"></textarea>\n                </label>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Official Package Details ( this information will be hidden from user)\n                    <textarea required value={getEditModePacDetail.officialDesc} disabled={getEditMode} onChange={ (e) => {\n                        setPackageofficialDesc(e.target.value)\n                    } } className=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        rows=\"5\" placeholder=\"Package Details\"></textarea>\n                </label>\n            </div>\n            <div className=\"mb-4 bg-gray-100 p-4 rounded-md\">\n                <label className=\"block text-gray-500 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Package Thumbnail\n                </label>\n                <div className=\"m-4\">\n                    <div className=\"flex items-center justify-center w-full\">\n                        <label\n                            className=\"flex  cursor-pointer flex-col w-full h-32 border-4 border-blue-200 border-dashed hover:bg-white hover:border-gray-300\">\n                            <div className=\"flex flex-col items-center justify-center pt-7\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"w-8 h-8 text-gray-400 group-hover:text-gray-600\"\n                                    fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                        d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                                </svg>\n                                <p className=\"pt-1 text-sm tracking-wider text-gray-400 group-hover:text-gray-600\">\n                                    Attach a file</p>\n                            </div>\n                            <input required onChange={ (e) => _uploadmedia(e.target.files[ 0 ]) } accept=\"image/*\" type=\"file\" className=\"opacity-0\" />\n                        </label>\n                    </div>\n                    { Packagethumb == null || Packagethumb == \"\" || Packagethumb == undefined ? null :\n                        <img className='w-20 hover:w-full duration-300 shadow-sm ' src={ Packagethumb } />\n                    }\n                </div>\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\n                    Number of free videos\n                    <input value={getEditModePacDetail.noOfFreeVideo} disabled={getEditMode} maxLength={ 6 } max={ 6 } min={ 0 } onChange={ (e) => { setFreeCourseVideo(e.target.value) } }\n                        type='number' className=\"shadow mt-2 appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        id=\"price\" placeholder='free videos' />\n                </label>\n            </div>\n            {/* <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Thumbnail\n                </label>\n                <input type='file' className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    id=\"Photo\" placeholder='Package Thumbnail' />\n            </div> */}\n\n            <div className=\"mb-4\">\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"name\">\n                    Price of package\n                </label>\n                <input value={getEditModePacDetail.price} disabled={getEditMode} onChange={ (e) => { setPackagePrice(e.target.value) } }\n                    type='number' className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    id=\"price\" placeholder='Package Price' />\n            </div>\n            <div className=\"mb-4\">\n                <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                    Select Course\n                </label>\n                <div className=\"relative\">\n                    <select onChange={onSelectCourse} value={getEditModePacDetail.courseId} disabled={getEditMode} className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Please Select</option>\n                        { courseList.length && courseList.map((res) => (\n                            <option value={ res.courseId }>{ res.courseName }</option>\n                        )) }\n                    </select>\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Subject\n                    </label>\n                    <select onChange={onSelectSubject}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Please Select</option>\n                        { SubjectList[ 0 ] && SubjectList.map((res) => (\n                            <option value={ res.Id }>{ res.subjectName }</option>\n                        )) }\n                    </select>\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Chapter\n                    </label>\n                    <select onChange={ onSelectChapter } defaultValue={\"\"}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Please Select</option>\n                        { ChapterList[ 0 ] && ChapterList.map((res) => (\n                            <option value={ res.chapterId }>{ res.chapterName }</option>\n                        )) }\n                    </select>\n\n                    <label className=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" htmlFor=\"grid-state\">\n                        Select Topic\n                    </label>\n                    <select onChange={ (e) => settopicId(e.target.value) } defaultValue={\"\"}\n                        className=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option value={\"\"}>Please Select</option>\n                        { topicList[ 0 ] && topicList.map((res) => (\n                            <option value={ res.Id }>{ res.topicName }</option>\n                        )) }\n                    </select>\n                    <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"w-full mx-auto\">\n                <div className=\"py-8\">\n                    <div>\n                        <h2 className=\"text-2xl font-semibold leading-tight\">Select Test</h2>\n                    </div>\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div\n                            className=\"inline-block min-w-full shadow-md rounded-lg overflow-x-auto selectTestHeight\"\n                        >\n                            <table className=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"px-2 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase\">\n\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            Test Title\n                                        </th>\n                                        \n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider w-10\">sectionName </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider w-10\">SectionTime </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider w-10\">positiveMarks </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider w-10\">negativeMarks </th>\n                                        {/* <th className=\" w-[900px] px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            Questions\n                                        </th> */}\n                                        \n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { \n                                        TetsList.map((res, i) => (\n                                            (res.courseCourseId == courseId || res.chapterChapterId == chapterId ||\n                                                res.subjectId == Subjectid || res.topicId == topicId) ?\n                                                <tr>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <input onClick={ () => {\n                                                            let da = [...data];\n                                                            let flag = false;\n                                                            da.map((e,v)=>{\n                                                                if(e.TestId == res.TestId) {\n                                                                    flag= true;\n                                                                }\n                                                            });\n                                                            if(!flag){\n                                                                setdata(data.concat(res)) \n                                                            } else {\n                                                                let newData = da.filter((e,v)=>{\n                                                                    if(e.TestId != res.TestId) {\n                                                                        return e;\n                                                                    }\n                                                                });\n                                                                setdata(newData);\n                                                            }\n                                                            \n                                                            \n                                                            }} checked={res?.isEditExist} type='checkbox' />\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <div className=\"flex\">\n                                                            <div className=\"ml-3\">\n                                                                <p className=\"text-gray-600 whitespace-no-wrap\">{ res.TestTitle }</p>\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                    {/* <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        \n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        \n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        \n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        \n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        \n                                                    </td> */}\n\n                                                   \n                                                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                                <>\n                                                                    <table>\n                                                                    <tbody>\n                                                                {  res.Section && res.Section.length && res.Section.map((sec, secindex) => ( \n                                                                    \n                                                                        <tr>\n                                                                            <td>{sec.sectionName}</td>\n                                                                        </tr>\n                                                                ))}\n                                                                </tbody>\n                                                                    </table>\n                                                                    </>\n                                                                </td>\n                                                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\"> \n                                                            <>\n                                                                    <table>\n                                                                    <tbody>\n                                                                {  res.Section && res.Section.length && res.Section.map((sec, secindex) => ( \n                                                                    \n                                                                        <tr>\n                                                                            <td>{sec.SectionTime}</td>\n                                                                        </tr>\n                                                                        \n                                                                    ))}\n                                                                    </tbody>\n                                                                    </table>\n                                                                    </>\n                                                            </td>\n                                                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                            <>\n                                                                <table>\n                                                                    <tbody>\n                                                            {  res.Section && res.Section.length && res.Section.map((sec, secindex) => ( \n                                                                \n                                                                    <tr>\n                                                                        <td>{sec.positiveMarks}</td>\n                                                                    </tr>\n                                                                    ))}\n                                                                     </tbody>\n                                                                </table>\n                                                                </>\n                                                                </td>\n\n                                                            <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[140px]\">\n                                                            <>\n                                                             <table>\n                                                                <tbody>\n                                                            {  res.Section && res.Section.length && res.Section.map((sec, secindex) => (\n                                                             \n                                                                    <tr>\n                                                                        <td>{sec.negativeMarks}</td>\n                                                                    </tr>\n                                                                     ))}\n                                                                     </tbody>\n                                                             </table>\n                                                             </>\n                                                                </td>\n                                                            {/* <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-[900px]\">\n                                                                { res.Section && res.Section.length && res.Section.map((sec, secindex) => (\n                                                                sec.QuestionList[ 0 ] && sec.QuestionList.map((question, qindex) => (\n                                                                    <>\n                                                                        <li data-tip={ question.questionoption[ 0 ] &&\n                                                                            question.questionoption.map(option => \"<br>\" + option.option + \"</br>\")\n                                                                        } className=\"text-gray-700 list-decimal p-2 font-semibold whitespace-no-wrap\">\n                                                                            <p dangerouslySetInnerHTML={ { __html: question.question } }></p>\n                                                                            <ReactTooltip data-type='info' arrowColor='#f9f9f9f' border={ true } backgroundColor='#f5f5f5'\n                                                                                data-multiline={ true } place=\"top\" type=\"light\" html={ true } />\n                                                                        </li>\n                                                                    </>\n                                                                )) \n                                                                ))\n                                                                }\n                                                            </td> */}\n                                                       \n                                                </tr>\n                                                : null\n                                        )) \n                                    } \n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"w-full mx-auto\">\n                <div className=\"py-8\">\n                    <div>\n                        <h2 className=\"text-2xl font-semibold leading-tight\">Select Video Test</h2>\n                    </div>\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                        <div\n                            className=\"inline-block min-w-full shadow-md rounded-lg overflow-x-auto selectTestHeight\"\n                        >\n                            <table className=\"min-w-full leading-normal\">\n                                <thead>\n                                    <tr>\n                                        <th className=\"px-2 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase\">\n\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\">\n                                            Video Title\n                                        </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider w-10\">Video Description </th>\n                                        <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider w-[300px]\">Video</th>\n\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        VideoList.map((res, i) => (\n                                            <tr>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <input onClick={ () => setdata(data.concat(res)) } type='checkbox' />\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <div className=\"flex\">\n                                                        <div className=\"ml-3\">\n                                                            <p className=\"text-gray-600 whitespace-no-wrap\">{ res.videoname }</p>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <div className=\"flex\">\n                                                        <div className=\"ml-3\">\n                                                            <p className=\"text-gray-600 whitespace-no-wrap\">{ res.videodescription }</p>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                    <div className=\"flex\">\n                                                        <div className=\"ml-3\">\n                                                            <video controls src={ res.videoPath } />\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )) }\n\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <ReactDragListView { ...dragProps }>\n                <ol>\n                    <div className=\"mx-auto\">\n                        <div className=\"py-8\">\n                            <div>\n                                <h2 className=\"text-2xl font-semibold leading-tight\">Order Package and Submit</h2>\n                            </div>\n                            <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                                <div\n                                    className=\"inline-block min-w-full shadow-md rounded-lg overflow-x-auto selectTestHeight\"\n                                >\n                                    <table className=\"min-w-full leading-normal\">\n                                        <thead>\n                                            <tr>\n                                                <th\n                                                    className=\"pl-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                                >\n                                                    S.no\n                                                </th>\n                                                <th\n                                                    className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                                >\n                                                    drag\n                                                </th>\n                                                <th\n                                                    className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                                >\n                                                    Test Title / Video Name\n                                                </th>\n                                                <th\n                                                    className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                                >\n                                                    Course type / Video Descriptio\n                                                </th>\n                                                <th\n                                                    className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                                >\n\n                                                </th>\n                                                <th\n                                                    className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100\"\n                                                ></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            { data.map((item, index) => (\n                                                console.log(\"🚀 ~ file: Createpackage.js ~ line 366 ~ Createpackage ~ item\", item),\n\n                                                <tr>\n                                                    <td className=\"pl-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <span>{ index + 1 }</span>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <a className='cursor-move' href=\"#\">\n                                                            <img width={ 20 } height={ 20 } src={ dragicon } />\n                                                        </a>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <div className=\"flex\">\n                                                            <div className=\"ml-3\">\n                                                                <p className=\"text-gray-900 whitespace-no-wrap\">\n                                                                        { item?.TestTitle ? item?.TestTitle : (item.videoname ? item.videoname: item?.name )} \n                                                                </p>\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                    <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                            <p className=\"text-gray-900 font-semibold whitespace-no-wrap\">\n                                                                { item?.exam_type != undefined ? item.exam_type : item.videodescription }</p>\n                                                        <p className=\"text-gray-600 whitespace-no-wrap\">{ ' ' }</p>\n                                                    </td>\n                                                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                            { item.videoPath != undefined ?\n                                                                <video className=\"text-gray-900 whitespace-no-wrap w-[300px]\" controls src={ item.videoPath } />\n                                                                : null }\n                                                        </td>\n                                                    {/* <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <span\n                                                            className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\"\n                                                        >\n                                                            <span\n                                                                aria-hidden\n                                                                className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\"\n                                                            ></span>\n                                                            <span className=\"relative\">status</span>\n                                                        </span>\n                                                    </td> */}\n                                                    {/* <td\n                                                        className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                    >\n                                                        <button\n                                                            type=\"button\"\n                                                            className=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                        >\n                                                            <svg\n                                                                className=\"inline-block h-6 w-6 fill-current\"\n                                                                viewBox=\"0 0 24 24\"\n                                                            >\n                                                                <path\n                                                                    d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                                />\n                                                            </svg>\n                                                        </button>\n                                                    </td> */}\n                                                </tr>\n                                                // </li>\n                                            )) }\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ol>\n            </ReactDragListView>\n\n            <div className=\"flex items-center justify-between\">\n                <button onClick={ () => _SubmitPackage() } className=\"bg-blue-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                    Submit\n                </button>\n            </div>\n\n            <div>\n\n\n            </div>\n        </div>\n    );\n}\n\nexport default Createpackage;\n","//import liraries\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component, useContext, useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { ToastInfo, ToastUpdate, uploadToCloud, uploadVideoToCloud } from '../api/Client';\nimport CourseListContext from '../context/AllprojectsContext';\n\n// create a component\nlet option1, option2, option3, option4 = null\nlet optionMedia1, optionMedia2, optionMedia3, optionMedia4, paragraphmedia = null\nconst AddVideos = () => {\n\n    const [ isPara, setPara ] = useState('single')\n    const { courseList, setcourseList } = useContext(CourseListContext)\n    const [ video, setVideo ] = useState()\n    const [ QuestionText, setQuestionText ] = useState(null)\n    const [ Subjectid, setSubjectid ] = useState(null)\n    const [ correctOption, setcorrectOption ] = useState(null)\n    const [ courseId, setcourseId ] = useState(null)\n    const [ chapterId, setchapterId ] = useState(null)\n    const [ topicId, settopicId ] = useState(null)\n    const [ VideoName, setVideoName ] = useState(null)\n    const [ Videodesc, setVideodesc ] = useState(null)\n    const [ SubjectList, setSubjectList ] = useState([])\n    const [ ChapterList, setChapterList ] = useState([])\n    const [ topicList, settopicList ] = useState([])\n    const [ QuestionTextPara, setQuestionTextPara ] = useState()\n    const [ Level, setLevel ] = useState(null)\n    const [ data, setdata ] = useState([])\n\n\n    const options = {\n        headers: {\n            'Content-type': 'application/json',\n            \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n        }\n    };\n\n    async function _SubmitVideo() {\n\n\n        const data = {\n            videodescription: Videodesc,\n            videoname: VideoName,\n            courseId: courseId,\n            videoPath: video\n        }\n        let toastid = ToastInfo('adding Video in course ...')\n        const res = await axios.post(process.env.REACT_APP_API + '/coursevideoupload', data, options)\n        // console.log(\"🚀 ~ file: addquestion.js ~ line 52 ~ _SubmitQuestion ~ res\", res.data)\n        _getQues()\n        if (res.status == 200) {\n            ToastUpdate(toastid, 'addedd successfully');\n            // window.location.reload(false);\n            setVideo()\n        }\n\n    }\n\n    const _getQues = async () => {\n        const res = await axios.get(process.env.REACT_APP_API + '/getvideobycourse/' + courseId, options)\n        console.log(\"🚀 ~ file: AddVideos.js ~ line 3278 ~ useEffect ~ res.data\", res.data)\n        if (res.status == 200) {\n            setdata(res.data)\n        }\n    }\n\n    const _getSubject = async () => {\n        const res = await axios.get(process.env.REACT_APP_API + '/subject/' + courseId, options)\n        if (res.status == 200) {\n            setSubjectList(res.data)\n        }\n    }\n\n    const _getchapter = async () => {\n        const res = await axios.get(process.env.REACT_APP_API + '/chapter/' + Subjectid, options)\n        if (res.status == 200) {\n            setChapterList(res.data)\n        }\n    }\n\n    const _gettopic = async () => {\n        const res = await axios.get(process.env.REACT_APP_API + '/topic/' + chapterId, options)\n        // console.log(\"🚀 ~ file: addquestion.js ~ line 79 ~ const_gettopic= ~ res\", res.data)\n        if (res.status == 200) {\n            settopicList(res.data)\n        }\n    }\n\n\n\n    useEffect(async () => {\n        _getQues()\n\n        // if (courseId != null) {\n        //     _getSubject()\n        // }\n        // if (Subjectid != null) {\n        //     _getchapter()\n        // }\n        // if (chapterId != null) {\n        //     _gettopic()\n        // }\n\n    }, [ courseId ])\n\n\n\n    const _uploadmedia = async (file, state) => {\n\n        let toastId = ToastInfo('Uploading Video Please wait...')\n        const resp = await uploadVideoToCloud(file, toastId);\n\n        let data = resp.data\n        let media = {\n            mediaID: data.asset_id,\n            MediaUrl: data.secure_url,\n            mediaType: data?.format == undefined ? 'xlsx' : data?.format,\n            MediaSize: data.bytes,\n            Date: moment().format('DD-MM-YYYY')\n        }\n        setVideo(data.secure_url)\n        ToastUpdate(toastId, 'Video uploaded Successfully, Submit the video now')\n        console.log(\"🚀 ~ file: addVideo.js ~ line 146 ~ const_uploadmedia= ~ data.secure_url\", data.secure_url)\n\n\n    }\n\n    return (\n\n        <div className='m-10'>\n            <ToastContainer />\n            <div class=\"mb-4\">\n                <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                    Select Course\n                </label>\n                <div class=\"relative\">\n                    <select onChange={ (e) => setcourseId(e.target.value) } class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option>Course dropdown</option>\n                        { courseList[ 0 ] && courseList.map((res) => (\n                            <option value={ res.courseId }>{ res.courseName }</option>\n                        )) }\n                    </select>\n                    {/* <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        Select Subject\n                    </label>\n                    <select onChange={ (e) => setSubjectid(e.target.value) }\n                        class=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option>Select dropdown</option>\n                        { SubjectList[ 0 ] && SubjectList.map((res) => (\n                            <option value={ res.Id }>{ res.subjectName }</option>\n                        )) }\n                    </select>\n                    <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        Select Chapter\n                    </label>\n                    <select onChange={ (e) => setchapterId(e.target.value) }\n                        class=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option>Select dropdown</option>\n                        { ChapterList[ 0 ] && ChapterList.map((res) => (\n                            <option value={ res.chapterId }>{ res.chapterName }</option>\n                        )) }\n                    </select>\n\n                    <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        Select Topic\n                    </label>\n                    <select onChange={ (e) => settopicId(e.target.value) }\n                        class=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option>Select dropdown</option>\n                        { topicList[ 0 ] && topicList.map((res) => (\n                            <option value={ res.Id }>{ res.topicName }</option>\n                        )) }\n                    </select> */}\n                    <div class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                    </div>\n                </div>\n                <div class=\"my-4\">\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"name\">\n                        Name\n                    </label>\n                    <input required onChange={ (e) => setVideoName(e.target.value) } class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        id=\"name\" type=\"text\" placeholder=\"Package Name\" />\n                </div>\n\n                <div class=\"my-4\">\n                    <label class=\"block text-gray-700 text-sm font-bold mb-2\">\n                        Video Details\n                        <textarea required onChange={ (e) => {\n                            setVideodesc(e.target.value)\n                        } } class=\"shadow form-textarea mt-1 block w-full border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                            rows=\"5\" placeholder=\"Package Details\"></textarea>\n                    </label>\n                </div>\n\n                <div class=\"flex items-center justify-center my-10 w-full\">\n                    <label\n                        class=\"flex  cursor-pointer flex-col w-full h-32 border-4 border-blue-200 border-dashed hover:bg-white hover:border-gray-300\">\n                        <div class=\"flex flex-col items-center justify-center pt-7\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-8 h-8 text-gray-400 group-hover:text-gray-600\"\n                                fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                                    d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\" />\n                            </svg>\n                            <p class=\"pt-1 text-sm tracking-wider text-gray-400 group-hover:text-gray-600\">\n                                Attach a file\n                                <p id='uploading'>Uploading video </p>\n                            </p>\n                        </div>\n                        <input onChange={ (e) => _uploadmedia(e.target.files[ 0 ]) } accept=\"video/*\" type=\"file\" class=\"opacity-0\" />\n                    </label>\n                </div>\n\n                <div class=\"flex items-center justify-between\">\n                    <button onClick={ () => _SubmitVideo() } class=\"bg-indigo-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                        Submit Video\n                    </button>\n                </div>\n\n\n\n\n\n\n                <div class=\"container mx-auto\">\n                    <div class=\"py-8\">\n                        <div>\n                            <h2 class=\"text-2xl font-semibold leading-tight\">All Videos</h2>\n                        </div>\n                        <div class=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                            <div\n                                class=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\"\n                            >\n                                <table class=\"min-w-full leading-normal\">\n                                    <thead>\n                                        <tr>\n                                            <th\n                                                class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                S.no\n                                            </th>\n                                            <th class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >Name</th>\n                                            <th class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >Description</th>\n                                            <th\n                                                class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                Video\n                                            </th>\n                                            {/* <th\n                                                class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                more\n                                            </th> */}\n\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.map((res, i) => (\n                                                <tr key={ i }>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <div class=\"flex\">\n                                                            <div class=\"ml-3\">\n                                                                <p class=\"text-gray-600 whitespace-no-wrap\">{ i }</p>\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.videoname }</p>\n                                                    </td>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.videodescription }</p>\n                                                    </td>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        {/* <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.videoPath }</p> */ }\n                                                        <video width={ 300 } height={ 200 } src={ res.videoPath } controls />\n                                                    </td>\n\n                                                    {/* <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <span\n                                                            class=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\"\n                                                        >\n\n                                                        </span>\n                                                    </td> */}\n                                                    {/* <td\n                                                        class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                    >\n                                                        <button\n                                                            type=\"button\"\n                                                            class=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                        >\n                                                            <svg\n                                                                class=\"inline-block h-6 w-6 fill-current\"\n                                                                viewBox=\"0 0 24 24\"\n                                                            >\n                                                                <path\n                                                                    d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                                />\n                                                            </svg>\n                                                        </button>\n                                                    </td> */}\n                                                </tr>\n                                            )) }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div >\n\n    );\n};\n\n\n\nexport default AddVideos;\n","//import liraries\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { Component, useContext, useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { ToastInfo, ToastUpdate, uploadToCloud, uploadVideoToCloud } from '../api/Client';\nimport CourseListContext from '../context/AllprojectsContext';\n\n// create a component\nlet option1, option2, option3, option4 = null\nlet optionMedia1, optionMedia2, optionMedia3, optionMedia4, paragraphmedia = null\nconst AddUsers = () => {\n\n\n\n    const [ logindetails, setlogindetails ] = useState({\n        firstName: \"\", lastName: \"\", email_Id: \"\",\n        mobileNumber: \"\", password: \"\", role: \"\",\n    })\n    // console.log(\"🚀 ~ file: addUsers.js ~ line 17 ~ AddUsers ~ logindetails\", logindetails)\n    const [ data, setdata ] = useState([])\n\n\n    const options = {\n        headers: {\n            'Content-type': 'application/json',\n            \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n        }\n    };\n\n    async function _createUsers() {\n\n\n        let toastid = ToastInfo('adding user ...')\n        const res = await axios.post(process.env.REACT_APP_API + '/register', logindetails, options)\n        // console.log(\"🚀 ~ file: addquestion.js ~ line 52 ~ _SubmitQuestion ~ res\", res.data)\n        _getQues()\n        if (res.status == 200) {\n            ToastUpdate(toastid, 'addedd successfully');\n            window.location.reload(false);\n        }\n\n    }\n\n    const _getQues = async () => {\n        const res = await axios.get(process.env.REACT_APP_API + '/alluser', options)\n        console.log(\"🚀 ~ file: AddUsers.js ~ line 3278 ~ useEffect ~ res.data\", res.data)\n        if (res.status == 200) {\n            setdata(res.data)\n        }\n    }\n\n\n\n\n    useEffect(async () => {\n        _getQues()\n    }, [])\n\n\n\n\n    return (\n\n        <div className='m-10'>\n            <ToastContainer />\n            <div class=\"mb-4\">\n                <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                    CREATE NEW USER\n                </label>\n                <div class=\"mb-4\">\n                    <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        User name\n                    </label>\n                    <input onChange={ (e) => { setlogindetails(prevState => ({ ...prevState, [ 'firstName' ]: e.target.value })) } }\n                        type='text' class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        id=\"price\" placeholder='Name' required />\n                    <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        Email Id\n                    </label>\n                    <input onChange={ (e) => {\n                        setlogindetails(prevState => ({ ...prevState, [ 'email_Id' ]: e.target.value }))\n                    } }\n                        type='email' class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        id=\"price\" placeholder='email id' required />\n                    <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        Password\n                    </label>\n                    <input onChange={ (e) => { setlogindetails(prevState => ({ ...prevState, [ 'password' ]: e.target.value })) } }\n                        type='text' class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        id=\"price\" placeholder='Password' required />\n                    <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        Mobile Number\n                    </label>\n                    <input onChange={ (e) => { setlogindetails(prevState => ({ ...prevState, [ 'mobileNumber' ]: e.target.value })) } }\n                        type='tel' class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                        id=\"price\" placeholder='mobile Number' required />\n                    <label class=\"block uppercase tracking-wide mt-2 text-gray-700 text-sm font-bold mb-2\" for=\"grid-state\">\n                        user Role\n                    </label>\n                    <select onChange={ (e) => setlogindetails(prevState => ({ ...prevState, [ 'role' ]: e.target.value })) }\n                        class=\"block appearance-none w-full bg-gray-200 mt-2 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n                        <option label='Select Role' value='' />\n                        { [ 'student', 'admin', 'creator', 'uploader', 'accountant' ].map(res => (\n                            <option label={ res } value={ res } />\n                        )) }\n                    </select>\n                </div>\n\n                <div class=\"flex items-center justify-center my-10 w-full\">\n\n                </div>\n\n                <div class=\"flex items-center justify-between\">\n                    <button onClick={ () => _createUsers() } class=\"bg-indigo-500 w-full hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"button\">\n                        Create New User\n                    </button>\n                </div>\n\n\n\n\n\n\n                <div class=\"\">\n                    <div class=\"py-8\">\n                        <div>\n                            <h2 class=\"text-2xl font-semibold leading-tight\">All Users</h2>\n                        </div>\n                        <div class=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n                            <div\n                                class=\"inline-block min-w-full shadow-md rounded-lg overflow-hidden\"\n                            >\n                                <table class=\"min-w-full leading-normal\">\n                                    <thead>\n                                        <tr>\n                                            <th\n                                                class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                S.no\n                                            </th>\n                                            <th\n                                                class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >\n                                                User Name\n                                            </th>\n\n                                            <th\n                                                class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >Email</th>\n                                            <th\n                                                class=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider\"\n                                            >Role</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            data.map((res, i) => (\n                                                <tr key={ i }>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <div class=\"flex\">\n                                                            <div class=\"ml-3\">\n                                                                <p class=\"text-gray-900 whitespace-no-wrap\">\n                                                                    {/* { res.Subjectid } */ }\n                                                                </p>\n                                                                <p class=\"text-gray-600 whitespace-no-wrap\">{ i }</p>\n                                                            </div>\n                                                        </div>\n                                                    </td>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.username }</p>\n                                                    </td>\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <p class=\"text-gray-900 font-semibold whitespace-no-wrap\">{ res.email_Id }</p>\n                                                    </td>\n\n                                                    <td class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n                                                        <span\n                                                            class=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\"\n                                                        >\n                                                            <span\n                                                                aria-hidden\n                                                                class=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\"\n                                                            >\n                                                            </span>\n                                                            <span class=\"relative\">{ res.user_type }</span>\n                                                        </span>\n                                                    </td>\n                                                    {/* <td\n                                                        class=\"px-5 py-5 border-b border-gray-200 bg-white text-sm text-right\"\n                                                    >\n                                                        <button\n                                                            type=\"button\"\n                                                            class=\"inline-block text-gray-500 hover:text-gray-700\"\n                                                        >\n                                                            <svg\n                                                                class=\"inline-block h-6 w-6 fill-current\"\n                                                                viewBox=\"0 0 24 24\"\n                                                            >\n                                                                <path\n                                                                    d=\"M12 6a2 2 0 110-4 2 2 0 010 4zm0 8a2 2 0 110-4 2 2 0 010 4zm-2 6a2 2 0 104 0 2 2 0 00-4 0z\"\n                                                                />\n                                                            </svg>\n                                                        </button>\n                                                    </td> */}\n                                                </tr>\n                                            )) }\n\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div >\n\n    );\n};\n\n\n\nexport default AddUsers;\n","import React, { useState } from 'react'\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { options } from '../api/Client';\n\nfunction AddBlog() {\n\n    const [ blog, setblogs ] = useState({\n        'title': '',\n        'shortDesc': '',\n        'body': ''\n    })\n    console.log(\"🚀 ~ file: blog.js ~ line 10 ~ AddBlog ~ blog\", blog)\n\n\n    const submitBlog = async () => {\n        const res = await axios.post(process.env.REACT_APP_API + '/publishblog', blog, options)\n        if (res.status == 200) {\n            alert('BLog updated')\n        }\n    }\n\n    return <div className='flex flex-col h-full'>\n        <div className='flex flex-col mx-20 mt-8'>\n            <label className=\"text-gray-400 mt-4\">Blog Title <sup class='text-red-500 font-bold'>*</sup></label>\n            <input onChange={ (e) => setblogs(prev => ({ ...prev, 'title': e.target.value })) } maxLength={ 80 } className='my-2 bg-indigo-100 rounded-lg p-4 text-gray-500 mt-1' type='text' placeholder='Max length 80 charecters' />\n            <label className=\"text-gray-400 mt-4\">Short Description</label>\n            <input onChange={ (e) => setblogs(prev => ({ ...prev, 'shortDesc': e.target.value })) } maxLength={ 120 } className='my-2 bg-indigo-100 rounded-lg p-4 text-gray-500 mt-1' type='text' placeholder='Max length 120 charecters' />\n            <label className=\"text-gray-400 my-4\">Body</label>\n            <ReactQuill modules={ {\n                toolbar: [\n                    [ { 'header': [ 1, 2, 3, 4, 5, 6, true ] }, { 'font': [] } ],\n                    [ 'bold', 'italic', 'underline', 'strike', 'code-block', 'blockquote' ],\n                    [ { 'list': 'ordered' }, { 'list': 'bullet' },\n                    { 'indent': '-1' }, { 'indent': '+1' } ],\n                    [ 'link', 'image', 'video' ],\n                    [ 'clean' ],\n                    [ { 'color': [] }, { 'background': [] } ],\n                    [ { 'script': 'sub' }, { 'script': 'super' } ],\n                    [ 'formula', true ]\n                ],\n            } }\n                formats={ {\n                    toolbar: [\n                        'header', 'font', 'size',\n                        'bold', 'italic', 'underline', 'strike', 'blockquote',\n                        'list', 'bullet', 'indent',\n                        'link', 'image', 'video'\n                    ]\n                } }\n                onChange={ (e) => setblogs(prev => ({ ...prev, 'body': e })) }\n            />\n\n            <button className='mt-[60px]' onClick={ () => submitBlog() }>Submit</button>\n        </div>\n    </div>\n}\nexport default AddBlog","import React, { useEffect } from 'react';\nimport Overview from './components/Overview';\nimport Navbar from './components/Navbar';\nimport { useState } from 'react';\nimport \"./App.css\"\nimport SignIn from './components/Auth/Signin';\nimport AllprojectsContext from './context/AllprojectsContext';\nimport SelectedProjectContext from './context/selectdProjectContext';\nimport updatesContext from './context/UpdatesContext';\nimport CountContext from './context/CountContext';\nimport axios from 'axios';\nimport { Redirect, Route, Switch, withRouter } from 'react-router';\nimport NotFound from './components/NotFound';\nimport Settings from './components/Settings';\nimport { useLocation } from 'react-router-dom';\nimport Admin from './Screens/addquestion';\nimport AddCourse from './Screens/addCourse';\nimport AddSubject from './Screens/addSubject';\nimport CreateTest from './Screens/createTest';\n\nimport AddChapter from './Screens/addChapter';\nimport AddTopic from './Screens/addTopic';\nimport CourseListContext from './context/AllprojectsContext';\nimport Createpackage from './Screens/Createpackage';\nimport AddVideos from './Screens/addVideo';\nimport AddUsers from './Screens/addUsers';\nimport AddBlog from './Screens/blog';\n\n\n\nfunction App() {\n\n  let [ updates, setUpdates ] = useState([]);\n  let [ count, setCount ] = useState(0);\n  let [isLoader, setLoader] = useState(false);\n  const updatesContextt = { updates, setUpdates }\n  const countContextt = { count, setCount }\n\n  const [ courseList, setcourseList ] = useState([])\n  const [ ProjectTasks, setProjectTasks ] = useState([])\n  const [ SelectedProject, setSelectedProject ] = useState()\n  let [ overview, showOverview ] = useState(true);\n  let [ task, showTask ] = useState(false);\n  let [ isAllTasks, showAllTask ] = useState(false);\n  let [ isIssueexp, setissuesexp ] = useState(false);\n  let [ Authorized, setAuthorized ] = useState(false);\n  let [ docs, setDocs ] = useState(false);\n  const [ isIssue, setIssue ] = useState(true)\n  let user = localStorage.getItem('user')\n  const Courses = { courseList, setcourseList }\n  const TaskContext = { ProjectTasks, setProjectTasks }\n  const SelectedProjects = { SelectedProject, setSelectedProject }\n  const IssuesAndExepensesCxt = { isIssue, setIssue }\n  let location = useLocation();\n\n  useEffect(async () => {\n    try {\n      const res = localStorage.getItem('token')\n      console.log(\"🚀 ~ file: App.js ~ line 51 ~ useEffect ~ res\", res)\n      if (res) {\n        setAuthorized(true)\n      }\n      else {\n        setAuthorized(false)\n      }\n      const userid = localStorage.getItem('userid')\n      const options = {\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\": 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n      // const resdata = await axios.get(process.env.REACT_APP_DURL + 'getUserProject/' + userid, options)\n      // setAllProjects(resdata.data.ProjectId)\n      // setSelectedProject(resdata?.data?.ProjectId[ 0 ]?._id)\n      // localStorage.setItem('pid', resdata?.data?.ProjectId[ 0 ]?._id)\n     // const respcourse = await axios.get(process.env.REACT_APP_API + '/course')\n     // console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ respcourse.data\", respcourse.data)\n     // if (respcourse.status == 200) {\n        // alert('success')\n        const respcourse = await axios.get(process.env.REACT_APP_API + '/course')\n        console.log(\"🚀 ~ file: AddCourse.js ~ line 32 ~ useEffect ~ res.data\", respcourse.data)\n        if (respcourse.status == 200) {\n          // alert('success')\n          setcourseList(respcourse.data)\n        }\n     // }\n    }\n    catch (err) {\n      console.log(err)\n    }\n  }, []);\n\n  return <React.Fragment>\n\n    <CountContext.Provider value={ countContextt } >\n      <updatesContext.Provider value={ updatesContextt } >\n        <CourseListContext.Provider value={ Courses }>\n          <SelectedProjectContext.Provider value={ SelectedProjects }>\n            <div>\n              { Authorized ?\n                <div style={ { display: 'flex' } }>\n                  <Navbar user={ user } />\n                  <div className='main-page'>\n                    <Switch>\n                      {/* <Route path='/editTask/:id' render={ (props) => <CreateTask { ...props } buttonName=\"Update Task\" /> } /> */ }\n                      {/* <Route path='/tasks/taskDetails' component={ Task } /> */ }\n                      {/* <Route path='/analysisDetails' render={ (props) => <AnalysisDetails { ...props } /> } /> */ }\n                      {/* <Route path='/documents/allFiles' component={ AllFiles } /> */ }\n                      {/* <Route path='/documents/allMedia' component={ AllMedia } /> */ }\n                      <Route path='/overview' render={ (props) => <Overview key='2' user={ user } { ...props } /> } />\n                      <Route path='/CreateTest' render={ (props) => <CreateTest key='3' isLoader={isLoader} setLoader={setLoader} Data={ user } { ...props } /> } />\n                      <Route path='/Createpackage' render={ (props) => <Createpackage key='4' isLoader={isLoader} setLoader={setLoader}  Data={ user } { ...props } /> } />\n                      <Route path='/addsubject' render={ (props) => <AddSubject key='5' Data={ user } { ...props } /> } />\n                      <Route path='/addCourse' render={ (props) => <AddCourse key='6'  Data={ user } { ...props } /> } />\n                      <Route path='/addChapter' render={ (props) => <AddChapter key='7' Data={ user } { ...props } /> } />\n                      <Route path='/addTopic' render={ (props) => <AddTopic key='8' Data={ user } { ...props } /> } />\n                      {/* <Route path='/tasks' render={ (props) => <AllTasks { ...props } /> } /> */ }\n                      {/* <Route path='/ratelist' render={ (props) => <Ratelist { ...props } /> } /> */ }\n                      {/* <Route path='/rfi' render={ (props) => <RFI { ...props } /> } /> */ }\n                      {/* <Route path='/rfidetails' render={ (props) => <RFIDetails { ...props } /> } /> */ }\n                      {/* <Route path='/reports' render={ (props) => <Reports { ...props } /> } /> */ }\n                      {/* <Route path='/train' render={(props)=> <Trainn {...props}/>} />   */ }\n                      <Route path='/settings' render={ (props) => <Settings key='9' { ...props } /> } />\n                      <Route path='/AddQuestion' render={ (props) => <Admin key='10' isLoader={isLoader} setLoader={setLoader} { ...props } /> } />\n                      <Route path='/AddVideo' render={ (props) => <AddVideos key='11' { ...props } /> } />\n                      <Route path='/addNewUser' render={ (props) => <AddUsers key='12' { ...props } /> } />\n                      <Route path='/AddBlog' render={ (props) => <AddBlog key='13' { ...props } /> } />\n                      {/* <Route path='/issuesAndExpenses' render={ (props) => <IssueAndExpense { ...props } /> } />\n                          <Route path='/module' render={ (props) => <Module { ...props } /> } />\n                          <Route path='/costSaved' render={ (props) => <CostSaved { ...props } /> } />\n                          <Route path='/costLeakages' render={ (props) => <CostLeakages { ...props } /> } />\n                          <Route path='/dpr' render={ (props) => <DailyProgressReport { ...props } /> } /> */}\n                      {/* <Route path='/createProject' component={CreateProject}/> */ }\n                      {/* <Route path='/createTask' render={ (props) => <CreateTask { ...props } buttonName=\"Create Task\" /> } /> */ }\n                      {/* <Route path='/calendar' component={CustomCalendar} /> */ }\n                      {/* <Route path ='/taskchart' component={TaskChart} /> */ }\n                      <Redirect from='/' exact to='/overview' />\n                      <Route path='/*' component={ NotFound } />\n                    </Switch>\n                  </div>\n                </div>\n                : <SignIn />\n              }\n            </div>\n          </SelectedProjectContext.Provider>\n        </CourseListContext.Provider>\n      </updatesContext.Provider>\n    </CountContext.Provider>\n    <div className={(isLoader) ? '': 'loaderDisplay'} id=\"loader\"></div>\n  </React.Fragment>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(<BrowserRouter><App/></BrowserRouter>,document.querySelector('#root'));\n\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Signin_main__1QR1u\",\"login\":\"Signin_login__1Hyeh\",\"formInput\":\"Signin_formInput__1cg5r\",\"checkbox\":\"Signin_checkbox__m3OSX\",\"password\":\"Signin_password__Cy_bt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFound_container__1v_WT\"};"],"sourceRoot":""}